{"version":3,"sources":["data_fetch/getUserFetch.js","data_fetch/fetch.js","images/default_pic.jpeg","defaultComponentTypeList/defaultComponentTypeList.js","images/toxic_logo.png","components/Login.js","components/LoginComponent.js","errorHandlers/CreateMotherboardErrorMessage.js","errorHandlers/CreateMemoryErrorMessage.js","errorHandlers/CreateCoolerErrorMessage.js","errorHandlers/CreateCaseErrorMessage.js","errorHandlers/CreatePowerSupplyErrorMessage.js","errorHandlers/CreateFanErrorMessage.js","errorHandlers/CreateSsdErrorMessage.js","errorHandlers/CreateHddErrorMessage.js","components/CreateErrorMessage.js","getFunctions/getObjectByType.js","infoHandlers/CreateCaseInfo.js","infoHandlers/CreateCoolerInfo.js","infoHandlers/CreateProcessorInfo.js","infoHandlers/CreateFanInfo.js","infoHandlers/CreateGraphicCardInfo.js","infoHandlers/CreateHddInfo.js","infoHandlers/CreateMemoryInfo.js","infoHandlers/CreateMotherboardInfo.js","infoHandlers/CreateSsdInfo.js","infoHandlers/CreatePsuInfo.js","components/CreateMoreInfo.js","components/CreateComponentRow.js","getFunctions/getTotalPrice.js","addExtraPcPart/addExtraComponent.js","icons/chevron-left-solid.svg","icons/chevron-right-solid.svg","components/SearchResultComponent.js","errorCheckMessages/errorMessagesHandlers.js","gameList/gameList.js","images/horizonzerodawn.gif","images/cyberpunk2077.gif","images/battlefieldv.gif","images/assassinscreedvalhalla.gif","images/fortnite.gif","components/CreateDoughnutChart.js","components/CreateGamePercormanceCard.js","getFunctions/getSelectedComponentOnly.js","data_fetch/saveBuildPostFetch.js","getFunctions/getObjectFromCurrentBuild.js","checkComponentList/checkEveryComponentIsSelected.js","checkComponentList/checkThereIsNoError.js","components/PcBuilder.js","getFunctions/getObjectFromCustomBuild.js","data_fetch/deleteBuildFetch.js","components/CreateBuildCard.js","components/CustomBuildsComponent.js","components/RaccoonBuildsComponent.js","components/UserProfileComponent.js","components/CreateBagPreview.js","components/CreateComponentDetailesRow.js","components/CreateItemDetaileRow.js","data_fetch/sendEmailFetch.js","components/DetailedBagComponent.js","App.js","index.js"],"names":["getUserFetch","jwtToken","setUserInfo","setLoggedInUserName","setLoggedInPrivilege","setLoggedInUserEmail","Axios","method","withCredentials","url","headers","jwt","then","res","data","jwtIsValid","setServerData","endPoint","a","fetch","response","json","getJSONDataFromServer","defaultType","defaultPrice","Login","useEffect","code","URL","window","location","href","searchParams","get","fetchToken","axios","post","authCode","localStorage","setItem","console","error","LoginComponent","loggedInUserName","checkUserToken","getItem","removeItem","className","path","width","src","logo","alt","onClick","process","CreateMotherboardErrorMessage","errorCheckers","componentTypesList","componentType","useState","errorIsVisible","setErrorIsVisible","warningIsVisible","setWarningIsVisible","find","component","keyWord","cpu","setCpu","mobo","setMobo","cpuMoboCompatibilityCheck","selected","cpuMoboOverclockCheck","count","msg","errorCounter","warning","warningCounter","CreateMemoryErrorMessage","ram","setRam","cpuMaxMemoryCheck","moboMaxMemoryCheck","ramMoboCompatibilityCheck","cpuMaxMemorySpeedCheck","ramBottleneckCheck","CreateCoolerErrorMessage","cooler","setCooler","moboCoolerSocketCheck","cpuCoolerQualityCheck","CreateCaseErrorMessage","vga","setVga","pcCase","setPcCase","cpuCoolerCaseSizeCheck","vgaCaseSizeCheck","CreatePowerSupplyErrorMessage","psu","setPsu","vgaPsuPowerCheck","CreateFanErrorMessage","filter","includes","fanArray","setFanArray","caseCoolerFanCheck","caseCoolerFanCheckWithPreBuildFan","CreateSsdErrorMessage","ssdArray","setSsdArray","hddArray","setHddArray","moboSataSlotCheck","caseSsdPlaceCheck","moboM2PlaceCheck","CreateHddErrorMessage","caseHddPlaceCheck","CreateErrorMessage","getObjectByType","array","type","TYPE","split","CreateCaseInfo","undefined","BUILT_FAN","MM120","MM140","MM200","FAN_PLACE","MAX_FAN_PLACE","CPU_COOLER_MAX_HEIGHT","RADIATOR_SUPPORT","VGA_MAX_LENGTH","MOBO_SUPPORT","map","index","SSD_PLACE","HDD_PLACE","CreateCoolerInfo","COOLING_TYPE","SUPPORTED_SOCKETS","socket","AIRFLOW","HEIGHT","WIDTH","SLOT_COUNTER_120MM","SLOT_COUNTER_140MM","CreateProcessorInfo","SOCKET","BASE_CLOCK","OVERCLOCK","CORES","THREADS","MAX_CLOCK","MAX_MEMORY","MAX_MEMORY_SPEED","MEMORY_TYPE","TDP","CreateFanInfo","SIZE","CreateGraphicCardInfo","CARD_MEMORY","CARD_LENGTH","FAN","RECOMMENDED_PSU","CreateHddInfo","CASE_SLOT","CONNECTION_TYPE","CreateMemoryInfo","MEMORY_SPEED","MEMORY_LATENCY","MEMORY_KIT","CAPACITY_EACH","CAPACITY_FULL","CreateMotherboardInfo","CHIPSET","MEMORY_SLOT","M_2_SLOT","SATA_SLOT_FULL","CreateSsdInfo","CreatePsuInfo","POWER","CreateMoreInfo","CreateComponentRow","setComponentTypesList","moreInfoIsVisible","setMoreInfoIsVisible","IMG","name","PRICE","onChange","event","selectedObject","target","value","newComponentList","comp","id","onChangeHandler","selector","newComponentTypeList","getTotalPrice","setTotalPrice","reduce","accumulator","currentValue","parseInt","join","addExtraComponent","defaultImage","componentTypeKeyWord","newObject","uuidv4","DEFAULT","SearchResultComponent","searchInput","filteredResultList","setFilteredResultList","firstShownResultIndex","setFirstShownResultIndex","lastShownResultIndex","setLastShownResultIndex","searchAllElement","resultList","keywords","toLowerCase","filteredList","every","keyword","push","length","leftArrowIcon","slice","result","resultComponent","setComponentIntoList","rightArrowIcon","GAMING_RANGE","COOLER_RANGE","MAX_TEMP","fanCounterOverall","fanCounter120mm","fanCounter140mm","fanCounter200mm","fan","sataCounter","ssd","hdd","ssdCounter","hddCounter","m2Counter","gameList","pic","gameObject","CreateDoughnutChart","performance1080p","performance1440p","performance2160p","datasets","backgroundColor","hoverOffset","offset","cutout","CreateGamePerformanceCard","gameName","gamePic","selectedVga","calculateBottleneck","resolution","selectedGpu","selectedCpu","selectedRam","GAMING_SCORE","multiplier","toFixed","FPS_RES_1080P","FPS_RES_1440P","FPS_RES_2160P","getSelectedComponents","componentTypeList","selectedOnly","saveBuild","buildName","userName","loggedInUserPrivilege","totalPrice","selectedComponents","loggedInUserEmail","body","JSON","stringify","getObjectFromCurrentBuild","price","checkEveryComponentIsSelected","checkThereIsNoError","PcBuilder","currentBag","setCurrentBag","setSerachInput","saveBuildFormIsVisible","setSaveBuildFormIsVisible","searchComponentVisibility","setSearchComponentVisibility","setBuildName","msgToUser","setMsgToUser","searchComponentVisibilityHandler","placeholder","e","game","i","getObjectFromCustomBuild","customBuildComponents","deleteBuild","buildId","CreateBuildCard","build","setBuildIsUpToDate","history","useHistory","COMPONENT_LIST","BUILD_NAME","USER_NAME","BUILD_PRICE","buildObject","ctl","master","obj","object","scrollTo","USER_EMAIL","BUILD_ID","CustomBuildsComponent","customBuildList","setCustomBuildList","buildIsUpToDate","RaccoonBuildsComponent","raccoonBuildList","setRaccoonBuildList","UserProfileComponent","user","jwt_decode","picture","email","CreateBagPreview","item","removableItem","newBag","removeItemHandler","CreateComponentDetailesRow","CreateItemDetailRow","componentsInfoIsVisible","setComponentInfoIsVisible","sendEmail","shippingDetailes","billingDetailes","takeOverType","paymentOption","additionalInfo","bagTotalPrice","DeatiledBagComponent","shippingDetailesIsVisible","setShippingDetailesIsVisible","setTakeOverType","setPaymentOption","setAdditionalInfo","ordererName","ordererEmail","ordererPhone","ordererCountry","ordererPostCode","ordererCity","ordererAddress","setShippingDetailes","billingName","billingEmail","billingPhone","billingCountry","billingPostCode","billingCity","billingAddress","setBillingDetailes","resultMsg","setResultMsg","billingInfoCheckboxIsChecked","setBillingInfoCheckboxIsChecked","checked","Object","values","val","App","userInfo","serverData","privilege","bagIsVisible","setBagIsVisible","bag","parse","CPU_AMD","concat","CPU_INTEL","MOBO_AMD","MOBO_INTEL","CPU_COOLER","RAM","VGA","CASE","PSU","SSD","HDD","getDefaultComponentTypeList","to","icon","faTools","faHdd","faServer","faSignInAlt","faSignOutAlt","faShoppingBag","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6b23950.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nfunction getUserFetch(jwtToken, setUserInfo, setLoggedInUserName, setLoggedInPrivilege, setLoggedInUserEmail) {\r\n  Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"http://localhost:4000/api/userToken\",\r\n      headers: {\r\n        jwt : jwtToken\r\n      }\r\n    }).then((res) => {\r\n      if (!res.data.jwtIsValid) {\r\n        setUserInfo(null)\r\n        setLoggedInUserName(null)\r\n        setLoggedInPrivilege(null)\r\n        setLoggedInUserEmail(null)\r\n      }\r\n    });\r\n}\r\n\r\nexport default getUserFetch","async function getJSONDataFromServer(setServerData, endPoint) {\r\n    const response = await fetch(`http://localhost:4000/api/${endPoint}`)\r\n    const data = await response.json()\r\n    setServerData(data)\r\n  }\r\n\r\nexport default getJSONDataFromServer","export default __webpack_public_path__ + \"static/media/default_pic.6a63cd08.jpeg\";","import defaultImage from '../images/default_pic.jpeg'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const defaultType = \"Please choose component from the dropdown menu!\"\r\nexport const defaultPrice = \"0 Ft\"\r\n\r\nexport function getDefaultComponentTypeList(serverData) {\r\n    return [ \r\n        {name : \"Processor\", keyWord : \"CPU\", type : serverData.CPU_AMD.concat(serverData.CPU_INTEL), id : uuidv4(), selected : {TYPE : defaultType, PRICE : defaultPrice, IMG : defaultImage, DEFAULT : true}, msg : {warning : 0, error : 0}},\r\n        {name : \"Motherboard\", keyWord : \"MOBO\", type : serverData.MOBO_AMD.concat(serverData.MOBO_INTEL), id : uuidv4(), selected : {TYPE : defaultType, PRICE : defaultPrice, IMG : defaultImage, DEFAULT : true}, msg : {warning : 0, error : 0}}, \r\n        {name : \"Cooler\", keyWord : \"COOLER\", type : serverData.CPU_COOLER, id : uuidv4(), selected : {TYPE : defaultType, PRICE : defaultPrice, IMG : defaultImage, DEFAULT : true}, msg : {warning : 0, error : 0}}, \r\n        {name : \"Memory\", keyWord : \"RAM\", type : serverData.RAM, id : uuidv4(), selected : {TYPE : defaultType, PRICE : defaultPrice, IMG : defaultImage, DEFAULT : true}, msg : {warning : 0, error : 0}}, \r\n        {name : \"Graphic Card\", keyWord : \"GPU\", type : serverData.VGA, id : uuidv4(), selected : {TYPE : defaultType, PRICE : defaultPrice, IMG : defaultImage, DEFAULT : true}, msg : {warning : 0, error : 0}}, \r\n        {name : \"Case\", keyWord : \"CASE\", type : serverData.CASE, id : uuidv4(), selected : {TYPE : defaultType, PRICE : defaultPrice, IMG : defaultImage, DEFAULT : true}, msg : {warning : 0, error : 0}}, \r\n        {name : \"PSU\", keyWord : \"PSU\", type : serverData.PSU, id : uuidv4(), selected : {TYPE : defaultType, PRICE : defaultPrice, IMG : defaultImage, DEFAULT : true}, msg : {warning : 0, error : 0}}, \r\n        {name : \"SSD\", keyWord : \"SSD\", type : serverData.SSD, id : uuidv4(), selected : {TYPE : defaultType, PRICE : defaultPrice, IMG : defaultImage, DEFAULT : true}, msg : {warning : 0, error : 0}}, \r\n        {name : \"HDD\", keyWord : \"HDD\", type : serverData.HDD, id : uuidv4(), selected : {TYPE : defaultType, PRICE : defaultPrice, IMG : defaultImage, DEFAULT : true}, msg : {warning : 0, error : 0}}, \r\n        {name : \"Fan\", keyWord : \"FAN\", type : serverData.FAN, id : uuidv4(), selected : {TYPE : defaultType, PRICE : defaultPrice, IMG : defaultImage, DEFAULT : true}, msg : {warning : 0, error : 0}}\r\n    ]\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/toxic_logo.5311a6a4.png\";","import { useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Login() {\r\n\r\n    useEffect(() => {\r\n        const url = new URL(window.location.href)\r\n        const code = url.searchParams.get('code')\r\n        fetchToken(code)\r\n    }, [])\r\n\r\n    const fetchToken = async (code) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:4000/api/login', {authCode : code})\r\n            localStorage.setItem('jwtToken', response.data.jwt)\r\n            window.location.href = 'http://localhost:3000/login'\r\n          } catch (error) {\r\n            console.error(error)\r\n            window.location.href = 'http://localhost:3000/login'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import '../sassFiles/out/LoginComponent.css'\r\nimport logo from '../images/toxic_logo.png'\r\nimport { useEffect } from 'react'\r\nimport GoogleButton from 'react-google-button'\r\nimport Login from './Login'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nfunction LoginComponent({loggedInUserName, setUserInfo}) {\r\n\r\n    useEffect(() => {\r\n      checkUserToken()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []) \r\n\r\n  const checkUserToken = async () => {\r\n    try {\r\n        const response = await axios.get('http://localhost:4000/api/userToken', {\r\n          headers: {\r\n            jwt: localStorage.getItem(\"jwtToken\")\r\n          }\r\n        })\r\n        if (!response.data.jwtIsValid) { \r\n          localStorage.removeItem(\"jwtToken\")\r\n          setUserInfo(null)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\n  const googleBtnHandler = () => {\r\n    window.location.href = process.env.REACT_APP_GOOGLE_AUTH_LINK;\r\n  }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/login\">\r\n                    <Login />\r\n                </Route>\r\n          </Switch>\r\n        </Router>\r\n            {loggedInUserName === null ? <div> \r\n                {<img width=\"200px\" src={logo} alt=\"toxic_logo\"></img>}\r\n                <GoogleButton onClick={googleBtnHandler}/>\r\n            </div> :\r\n            <div>\r\n                <img width=\"200px\" src={logo} alt=\"toxic_logo\"></img>\r\n                <h1>You are logged in as {loggedInUserName}</h1>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginComponent","import { useState, useEffect } from 'react'\r\n\r\nconst CreateMotherboardErrorMessage = ({ errorCheckers, componentTypesList, componentType }) => {\r\n\r\n    const [ errorIsVisible, setErrorIsVisible ] = useState(false)\r\n    const [ warningIsVisible, setWarningIsVisible ] = useState(false)\r\n\r\n    const onErrorClickHandler = () => {\r\n        if (errorIsVisible) setErrorIsVisible(false)\r\n        if (!errorIsVisible) setErrorIsVisible(true)\r\n    }\r\n\r\n    const onWarningClickHandler = () => {\r\n        if (warningIsVisible) setWarningIsVisible(false)\r\n        if (!warningIsVisible) setWarningIsVisible(true)\r\n    }\r\n\r\n    const [cpu, setCpu] = useState(componentTypesList.find(component => component.keyWord === \"CPU\"))\r\n    const [mobo, setMobo] = useState(componentTypesList.find(component => component.keyWord === \"MOBO\"))\r\n\r\n    const errorCounter = () => {\r\n        let count = 0\r\n        if (errorCheckers.cpuMoboCompatibilityCheck(cpu.selected, mobo.selected) !== false) count++\r\n        componentType.msg.error = count\r\n    }\r\n\r\n    const warningCounter = () => {\r\n        let count = 0\r\n        if (!errorCheckers.cpuMoboCompatibilityCheck(cpu.selected, mobo.selected) && errorCheckers.cpuMoboOverclockCheck(cpu.selected, mobo.selected) !== false) count++\r\n        componentType.msg.warning = count\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCpu(componentTypesList.find(component => component.keyWord === \"CPU\"))\r\n        setMobo(componentTypesList.find(component => component.keyWord === \"MOBO\"))\r\n    }, [componentTypesList])\r\n\r\n    return (\r\n        <div>\r\n            {errorCheckers.cpuMoboCompatibilityCheck(cpu.selected, mobo.selected) !== false \r\n            && <p onClick={onErrorClickHandler} className=\"component-error-msg\">You've got an error message from raccoon!</p>}\r\n            {errorIsVisible && <div>\r\n                <p className=\"component-error-msg\">{errorCheckers.cpuMoboCompatibilityCheck(cpu.selected, mobo.selected)}</p>\r\n                </div>}\r\n\r\n            {!errorCheckers.cpuMoboCompatibilityCheck(cpu.selected, mobo.selected) && errorCheckers.cpuMoboOverclockCheck(cpu.selected, mobo.selected) !== false \r\n            && <p onClick={onWarningClickHandler} className=\"component-warning-msg\">You've got a warning message from raccoon!</p>}\r\n            {warningIsVisible && <div>\r\n                <p className=\"component-warning-msg\">{!errorCheckers.cpuMoboCompatibilityCheck(cpu.selected, mobo.selected) && errorCheckers.cpuMoboOverclockCheck(cpu.selected, mobo.selected)}</p>\r\n                </div>} \r\n\r\n                {errorCounter()}\r\n                {warningCounter()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateMotherboardErrorMessage\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst CreateMemoryErrorMessage = ({ errorCheckers, componentTypesList, componentType }) => {\r\n\r\n    const [ errorIsVisible, setErrorIsVisible ] = useState(false)\r\n    const [ warningIsVisible, setWarningIsVisible ] = useState(false)\r\n\r\n    const onErrorClickHandler = () => {\r\n        if (errorIsVisible) setErrorIsVisible(false)\r\n        if (!errorIsVisible) setErrorIsVisible(true)\r\n    }\r\n\r\n    const onWarningClickHandler = () => {\r\n        if (warningIsVisible) setWarningIsVisible(false)\r\n        if (!warningIsVisible) setWarningIsVisible(true)\r\n    }\r\n\r\n    const [cpu, setCpu] = useState(componentTypesList.find(component => component.keyWord === \"CPU\"))\r\n    const [mobo, setMobo] = useState(componentTypesList.find(component => component.keyWord === \"MOBO\"))\r\n    const [ram, setRam] = useState(componentTypesList.find(component => component.keyWord === \"RAM\"))\r\n\r\n    const errorCounter = () => {\r\n        let count = 0\r\n        if (errorCheckers.cpuMaxMemoryCheck(cpu.selected, ram.selected) !== false) count++\r\n        if (errorCheckers.moboMaxMemoryCheck(mobo.selected, ram.selected) !== false) count++\r\n        if (errorCheckers.ramMoboCompatibilityCheck(mobo.selected, ram.selected) !== false) count++\r\n        componentType.msg.error = count\r\n    }\r\n\r\n    const warningCounter = () => {\r\n        let count = 0\r\n        if (errorCheckers.cpuMaxMemorySpeedCheck(cpu.selected, ram.selected) !== false) count++\r\n        if (errorCheckers.ramBottleneckCheck(mobo.selected, ram.selected) !== false) count++\r\n        componentType.msg.warning = count\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCpu(componentTypesList.find(component => component.keyWord === \"CPU\"))\r\n        setMobo(componentTypesList.find(component => component.keyWord === \"MOBO\"))\r\n        setRam(componentTypesList.find(component => component.keyWord === \"RAM\"))\r\n    }, [componentTypesList])\r\n\r\n    return (\r\n        <div>\r\n            {(errorCheckers.cpuMaxMemoryCheck(cpu.selected, ram.selected) !== false \r\n            || errorCheckers.moboMaxMemoryCheck(mobo.selected, ram.selected) !== false\r\n            || errorCheckers.ramMoboCompatibilityCheck(mobo.selected, ram.selected) !== false)\r\n            && <p onClick={onErrorClickHandler} className=\"component-error-msg\">You've got an error message from raccoon!</p>}\r\n            {errorIsVisible && <div>\r\n                <p className=\"component-error-msg\">{errorCheckers.cpuMaxMemoryCheck(cpu.selected, ram.selected)}</p>\r\n                <p className=\"component-error-msg\">{errorCheckers.moboMaxMemoryCheck(mobo.selected, ram.selected)}</p>\r\n                <p className=\"component-error-msg\">{errorCheckers.ramMoboCompatibilityCheck(mobo.selected, ram.selected)}</p>\r\n                </div>}\r\n            {(errorCheckers.cpuMaxMemorySpeedCheck(cpu.selected, ram.selected) !== false \r\n            || errorCheckers.ramBottleneckCheck(mobo.selected, ram.selected) !== false)\r\n            && <p onClick={onWarningClickHandler} className=\"component-warning-msg\">You've got a warning message from raccoon!</p>}\r\n            {warningIsVisible && <div>\r\n                <p className=\"component-warning-msg\">{errorCheckers.cpuMaxMemorySpeedCheck(cpu.selected, ram.selected)}</p>\r\n                <p className=\"component-warning-msg\">{errorCheckers.ramBottleneckCheck(mobo.selected, ram.selected)}</p>\r\n                </div>} \r\n\r\n            {errorCounter()}\r\n            {warningCounter()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateMemoryErrorMessage","import { useState, useEffect } from 'react'\r\n\r\nconst CreateCoolerErrorMessage = ({ errorCheckers, componentTypesList, componentType }) => {\r\n\r\n    const [ errorIsVisible, setErrorIsVisible ] = useState(false)\r\n    const [ warningIsVisible, setWarningIsVisible ] = useState(false)\r\n\r\n    const onErrorClickHandler = () => {\r\n        if (errorIsVisible) setErrorIsVisible(false)\r\n        if (!errorIsVisible) setErrorIsVisible(true)\r\n    }\r\n\r\n    const onWarningClickHandler = () => {\r\n        if (warningIsVisible) setWarningIsVisible(false)\r\n        if (!warningIsVisible) setWarningIsVisible(true)\r\n    }\r\n\r\n    const [cpu, setCpu] = useState(componentTypesList.find(component => component.keyWord === \"CPU\"))\r\n    const [mobo, setMobo] = useState(componentTypesList.find(component => component.keyWord === \"MOBO\"))\r\n    const [cooler, setCooler] = useState(componentTypesList.find(component => component.keyWord === \"COOLER\"))\r\n\r\n    const errorCounter = () => {\r\n        let count = 0\r\n        if (errorCheckers.moboCoolerSocketCheck(mobo.selected, cooler.selected) !== false) count++\r\n        componentType.msg.error = count\r\n    }\r\n\r\n    const warningCounter = () => {\r\n        let count = 0\r\n        if (errorCheckers.cpuCoolerQualityCheck(cpu.selected, cooler.selected) !== false) count++\r\n        componentType.msg.warning = count\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCpu(componentTypesList.find(component => component.keyWord === \"CPU\"))\r\n        setMobo(componentTypesList.find(component => component.keyWord === \"MOBO\"))\r\n        setCooler(componentTypesList.find(component => component.keyWord === \"COOLER\"))\r\n    }, [componentTypesList])\r\n\r\n    return (\r\n        <div>\r\n            {errorCheckers.moboCoolerSocketCheck(mobo.selected, cooler.selected) !== false \r\n            && <p onClick={onErrorClickHandler} className=\"component-error-msg\">You've got an error message from raccoon!</p>}\r\n            {errorIsVisible && <div><p className=\"component-error-msg\">{errorCheckers.moboCoolerSocketCheck(mobo.selected, cooler.selected)}</p></div>}\r\n\r\n            {errorCheckers.cpuCoolerQualityCheck(cpu.selected, cooler.selected) !== false \r\n            && <p onClick={onWarningClickHandler} className=\"component-warning-msg\">You've got a warning message from raccoon!</p>}\r\n            {warningIsVisible && <div><p className=\"component-warning-msg\">{errorCheckers.cpuCoolerQualityCheck(cpu.selected, cooler.selected)}</p></div>} \r\n\r\n            {errorCounter()}\r\n            {warningCounter()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateCoolerErrorMessage","import { useState, useEffect } from 'react'\r\n\r\nconst CreateCaseErrorMessage = ({ errorCheckers, componentTypesList, componentType }) => {\r\n\r\n    const [ errorIsVisible, setErrorIsVisible ] = useState(false)\r\n\r\n    const onErrorClickHandler = () => {\r\n        if (errorIsVisible) setErrorIsVisible(false)\r\n        if (!errorIsVisible) setErrorIsVisible(true)\r\n    }\r\n\r\n    const [cooler, setCooler] = useState(componentTypesList.find(component => component.keyWord === \"COOLER\"))\r\n    const [vga, setVga] = useState(componentTypesList.find(component => component.keyWord === \"GPU\"))\r\n    const [pcCase, setPcCase] = useState(componentTypesList.find(component => component.keyWord === \"CASE\"))\r\n\r\n    const errorCounter = () => {\r\n\r\n        \r\n        let count = 0\r\n    \r\n        if (errorCheckers.cpuCoolerCaseSizeCheck(cooler.selected, pcCase.selected) !== false) count++\r\n        if (errorCheckers.vgaCaseSizeCheck(vga.selected, pcCase.selected) !== false) count++\r\n        componentType.msg.error = count\r\n\r\n        \r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        setCooler(componentTypesList.find(component => component.keyWord === \"COOLER\"))\r\n        setVga(componentTypesList.find(component => component.keyWord === \"GPU\"))\r\n        setPcCase(componentTypesList.find(component => component.keyWord === \"CASE\"))\r\n    }, [componentTypesList])\r\n\r\n    return (\r\n        <div>\r\n            {(errorCheckers.cpuCoolerCaseSizeCheck(cooler.selected, pcCase.selected) !== false \r\n            || errorCheckers.vgaCaseSizeCheck(vga.selected, pcCase.selected) !== false)\r\n            && <p onClick={onErrorClickHandler} className=\"component-error-msg\">You've got an error message from raccoon!</p>}\r\n            {errorIsVisible && <div>\r\n                <p className=\"component-error-msg\">{errorCheckers.cpuCoolerCaseSizeCheck(cooler.selected, pcCase.selected)}</p>\r\n                <p className=\"component-error-msg\">{errorCheckers.vgaCaseSizeCheck(vga.selected, pcCase.selected)}</p>\r\n                </div>}\r\n\r\n            {errorCounter()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateCaseErrorMessage","import { useState, useEffect } from 'react'\r\n\r\nconst CreatePowerSupplyErrorMessage = ({ errorCheckers, componentTypesList, componentType }) => {\r\n\r\n    const [ errorIsVisible, setErrorIsVisible ] = useState(false)\r\n\r\n    const onErrorClickHandler = () => {\r\n        if (errorIsVisible) setErrorIsVisible(false)\r\n        if (!errorIsVisible) setErrorIsVisible(true)\r\n    }\r\n\r\n    const [vga, setVga] = useState(componentTypesList.find(component => component.keyWord === \"GPU\"))\r\n    const [psu, setPsu] = useState(componentTypesList.find(component => component.keyWord === \"PSU\"))\r\n\r\n    const errorCounter = () => {\r\n        let count = 0\r\n        if (errorCheckers.vgaPsuPowerCheck(vga.selected, psu.selected) !== false) count++\r\n        componentType.msg.error = count\r\n    }\r\n\r\n    useEffect(() => {\r\n        setVga(componentTypesList.find(component => component.keyWord === \"GPU\"))\r\n        setPsu(componentTypesList.find(component => component.keyWord === \"PSU\"))\r\n    }, [componentTypesList])\r\n\r\n    return (\r\n        <div>\r\n            {errorCheckers.vgaPsuPowerCheck(vga.selected, psu.selected) !== false \r\n            && <p onClick={onErrorClickHandler} className=\"component-error-msg\">You've got an error message from raccoon!</p>}\r\n            {errorIsVisible && <div>\r\n                <p className=\"component-error-msg\">{errorCheckers.vgaPsuPowerCheck(vga.selected, psu.selected)}</p>\r\n                </div>}\r\n\r\n            {errorCounter()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePowerSupplyErrorMessage","import { useState, useEffect } from 'react'\r\n\r\nconst CreateFanErrorMessage = ({ errorCheckers, componentTypesList, componentType }) => {\r\n\r\n    const [ errorIsVisible, setErrorIsVisible ] = useState(false)\r\n    const [ warningIsVisible, setWarningIsVisible ] = useState(false)\r\n\r\n    const onErrorClickHandler = () => {\r\n        if (errorIsVisible) setErrorIsVisible(false)\r\n        if (!errorIsVisible) setErrorIsVisible(true)\r\n    }\r\n\r\n    const onWarningClickHandler = () => {\r\n        if (warningIsVisible) setWarningIsVisible(false)\r\n        if (!warningIsVisible) setWarningIsVisible(true)\r\n    }\r\n\r\n    const [pcCase, setPcCase] = useState(componentTypesList.find(component => component.keyWord === \"CASE\"))\r\n    const [cooler, setCooler] = useState(componentTypesList.find(component => component.keyWord === \"COOLER\"))\r\n    const [fanArray, setFanArray] = useState(componentTypesList.filter(component => component.keyWord.includes(\"FAN\")))\r\n\r\n    const errorCounter = () => {\r\n        let count = 0\r\n        if (errorCheckers.caseCoolerFanCheck(pcCase.selected, cooler.selected, fanArray) !== false) count++\r\n        componentType.msg.error = count\r\n    }\r\n\r\n    const warningCounter = () => {\r\n        let count = 0\r\n        if (!errorCheckers.caseCoolerFanCheck(pcCase.selected, cooler.selected, fanArray) && errorCheckers.caseCoolerFanCheckWithPreBuildFan(pcCase.selected, cooler.selected, fanArray) !== false) count++\r\n        componentType.msg.warning = count\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPcCase(componentTypesList.find(component => component.keyWord === \"CASE\"))\r\n        setCooler(componentTypesList.find(component => component.keyWord === \"COOLER\"))\r\n        setFanArray(componentTypesList.filter(component => component.keyWord.includes(\"FAN\")))\r\n    }, [componentTypesList])\r\n\r\n    return (\r\n        <div>\r\n            {errorCheckers.caseCoolerFanCheck(pcCase.selected, cooler.selected, fanArray) !== false \r\n            && <p onClick={onErrorClickHandler} className=\"component-error-msg\">You've got an error message from raccoon!</p>}\r\n            {errorIsVisible && <div><p className=\"component-error-msg\">{errorCheckers.caseCoolerFanCheck(pcCase.selected, cooler.selected, fanArray)}</p></div>}\r\n\r\n            {!errorCheckers.caseCoolerFanCheck(pcCase.selected, cooler.selected, fanArray) && errorCheckers.caseCoolerFanCheckWithPreBuildFan(pcCase.selected, cooler.selected, fanArray) !== false \r\n            && <p onClick={onWarningClickHandler} className=\"component-warning-msg\">You've got a warning message from raccoon!</p>}\r\n            {warningIsVisible && <div><p className=\"component-warning-msg\">{!errorCheckers.caseCoolerFanCheck(pcCase.selected, cooler.selected, fanArray) && errorCheckers.caseCoolerFanCheckWithPreBuildFan(pcCase.selected, cooler.selected, fanArray)}</p></div>} \r\n\r\n            {errorCounter()}\r\n            {warningCounter()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateFanErrorMessage","import { useState, useEffect } from 'react'\r\n\r\nconst CreateSsdErrorMessage = ({ errorCheckers, componentTypesList, componentType }) => {\r\n\r\n    const [ errorIsVisible, setErrorIsVisible ] = useState(false)\r\n\r\n    const onErrorClickHandler = () => {\r\n        if (errorIsVisible) setErrorIsVisible(false)\r\n        if (!errorIsVisible) setErrorIsVisible(true)\r\n    }\r\n\r\n    const [mobo, setMobo] = useState(componentTypesList.find(component => component.keyWord === \"MOBO\"))\r\n    const [pcCase, setPcCase] = useState(componentTypesList.find(component => component.keyWord === \"CASE\"))\r\n    const [ssdArray, setSsdArray] = useState(componentTypesList.filter(component => component.keyWord.includes(\"SSD\")))\r\n    const [hddArray, setHddArray] = useState(componentTypesList.filter(component => component.keyWord.includes(\"HDD\")))\r\n\r\n    const errorCounter = () => {\r\n        let count = 0\r\n        if (errorCheckers.moboSataSlotCheck(mobo.selected, ssdArray, hddArray) !== false) count++\r\n        if (errorCheckers.caseSsdPlaceCheck(pcCase.selected, ssdArray) !== false) count++\r\n        if (errorCheckers.moboM2PlaceCheck(mobo.selected, ssdArray) !== false) count++\r\n        componentType.msg.error = count\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMobo(componentTypesList.find(component => component.keyWord === \"MOBO\"))\r\n        setPcCase(componentTypesList.find(component => component.keyWord === \"CASE\"))\r\n        setSsdArray(componentTypesList.filter(component => component.keyWord.includes(\"SSD\")))\r\n        setHddArray(componentTypesList.filter(component => component.keyWord.includes(\"HDD\")))\r\n    }, [componentTypesList])\r\n\r\n    return (\r\n        <div>\r\n            {(errorCheckers.moboSataSlotCheck(mobo.selected, ssdArray, hddArray) !== false \r\n            || errorCheckers.caseSsdPlaceCheck(pcCase.selected, ssdArray) !== false\r\n            || errorCheckers.moboM2PlaceCheck(mobo.selected, ssdArray) !== false)\r\n            && <p onClick={onErrorClickHandler} className=\"component-error-msg\">You've got an error message from raccoon!</p>}\r\n            {errorIsVisible && <div>\r\n                <p className=\"component-error-msg\">{errorCheckers.moboSataSlotCheck(mobo.selected, ssdArray, hddArray)}</p>\r\n                <p className=\"component-error-msg\">{errorCheckers.caseSsdPlaceCheck(pcCase.selected, ssdArray)}</p>\r\n                <p className=\"component-error-msg\">{errorCheckers.moboM2PlaceCheck(mobo.selected, ssdArray)}</p>\r\n                </div>}\r\n\r\n            {errorCounter()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateSsdErrorMessage","import { useState, useEffect } from 'react'\r\n\r\nconst CreateHddErrorMessage = ({ errorCheckers, componentTypesList, componentType }) => {\r\n\r\n    const [ errorIsVisible, setErrorIsVisible ] = useState(false)\r\n\r\n    const onErrorClickHandler = () => {\r\n        if (errorIsVisible) setErrorIsVisible(false)\r\n        if (!errorIsVisible) setErrorIsVisible(true)\r\n    }\r\n\r\n    const [mobo, setMobo] = useState(componentTypesList.find(component => component.keyWord === \"MOBO\"))\r\n    const [pcCase, setPcCase] = useState(componentTypesList.find(component => component.keyWord === \"CASE\"))\r\n    const [ssdArray, setSsdArray] = useState(componentTypesList.filter(component => component.keyWord.includes(\"SSD\")))\r\n    const [hddArray, setHddArray] = useState(componentTypesList.filter(component => component.keyWord.includes(\"HDD\")))\r\n\r\n    const errorCounter = () => {\r\n        let count = 0\r\n        if (errorCheckers.moboSataSlotCheck(mobo.selected, ssdArray, hddArray) !== false) count++\r\n        if (errorCheckers.caseHddPlaceCheck(pcCase.selected, hddArray) !== false) count++\r\n        componentType.msg.error = count\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMobo(componentTypesList.find(component => component.keyWord === \"MOBO\"))\r\n        setPcCase(componentTypesList.find(component => component.keyWord === \"CASE\"))\r\n        setSsdArray(componentTypesList.filter(component => component.keyWord.includes(\"SSD\")))\r\n        setHddArray(componentTypesList.filter(component => component.keyWord.includes(\"HDD\")))\r\n    }, [componentTypesList])\r\n\r\n    return (\r\n        <div>\r\n            {(errorCheckers.moboSataSlotCheck(mobo.selected, ssdArray, hddArray) !== false \r\n            || errorCheckers.caseHddPlaceCheck(pcCase.selected, hddArray) !== false)\r\n            && <p onClick={onErrorClickHandler} className=\"component-error-msg\">You've got an error message from raccoon!</p>}\r\n            {errorIsVisible && <div>\r\n                <p className=\"component-error-msg\">{errorCheckers.moboSataSlotCheck(mobo.selected, ssdArray, hddArray)}</p>\r\n                <p className=\"component-error-msg\">{errorCheckers.caseHddPlaceCheck(pcCase.selected, hddArray)}</p>\r\n                </div>}\r\n                \r\n            {errorCounter()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateHddErrorMessage","import CreateMotherboardErrorMessage from '../errorHandlers/CreateMotherboardErrorMessage'\r\nimport CreateMemoryErrorMessage from '../errorHandlers/CreateMemoryErrorMessage'\r\nimport CreateCoolerErrorMessage from '../errorHandlers/CreateCoolerErrorMessage'\r\nimport CreateCaseErrorMessage from '../errorHandlers/CreateCaseErrorMessage'\r\nimport CreatePowerSupplyErrorMessage from '../errorHandlers/CreatePowerSupplyErrorMessage'\r\nimport CreateFanErrorMessage from '../errorHandlers/CreateFanErrorMessage'\r\nimport CreateSsdErrorMessage from '../errorHandlers/CreateSsdErrorMessage'\r\nimport CreateHddErrorMessage from '../errorHandlers/CreateHddErrorMessage'\r\n\r\n\r\nfunction CreateErrorMessage({errorCheckers, componentTypesList, componentType}) {\r\n\r\n    return (\r\n        <div className=\"component-error-messages\">\r\n            \r\n            {componentType.keyWord === \"MOBO\" && <CreateMotherboardErrorMessage errorCheckers={errorCheckers} componentTypesList={componentTypesList} componentType={componentType}/>}\r\n            {componentType.keyWord === \"RAM\" && <CreateMemoryErrorMessage errorCheckers={errorCheckers} componentTypesList={componentTypesList} componentType={componentType}/>}\r\n            {componentType.keyWord === \"COOLER\" && <CreateCoolerErrorMessage errorCheckers={errorCheckers} componentTypesList={componentTypesList} componentType={componentType}/>}\r\n            {componentType.keyWord === \"CASE\" && <CreateCaseErrorMessage errorCheckers={errorCheckers} componentTypesList={componentTypesList} componentType={componentType}/>}\r\n            {componentType.keyWord === \"PSU\" && <CreatePowerSupplyErrorMessage errorCheckers={errorCheckers} componentTypesList={componentTypesList} componentType={componentType}/>}\r\n            {componentType.keyWord.includes(\"FAN\") && <CreateFanErrorMessage errorCheckers={errorCheckers} componentTypesList={componentTypesList} componentType={componentType}/>}\r\n            {componentType.keyWord.includes(\"SSD\") && <CreateSsdErrorMessage errorCheckers={errorCheckers} componentTypesList={componentTypesList} componentType={componentType}/>}\r\n            {componentType.keyWord.includes(\"HDD\") && <CreateHddErrorMessage errorCheckers={errorCheckers} componentTypesList={componentTypesList} componentType={componentType}/>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateErrorMessage","function getObjectByType(array, type) {\r\n    let object = array.find(component => component.TYPE === type.split(\" --- \")[0])\r\n    return object\r\n}\r\n\r\nexport default getObjectByType","import React from 'react'\r\n\r\nexport default function CreateCaseInfo({componentType}) {\r\n    \r\n    return (\r\n        <div>\r\n            {componentType.selected.BUILT_FAN !== undefined && <ul>\r\n             {componentType.selected.BUILT_FAN.MM120 !== undefined && <li>120mm Pre-built fan(s): {componentType.selected.BUILT_FAN.MM120}</li>}\r\n             {componentType.selected.BUILT_FAN.MM140 !== undefined && <li>140mm Pre-built fan(s): {componentType.selected.BUILT_FAN.MM140}</li>}\r\n             {componentType.selected.BUILT_FAN.MM200 !== undefined && <li>200mm Pre-built fan(s): {componentType.selected.BUILT_FAN.MM200}</li>}\r\n             <li>Supports maximum {componentType.selected.FAN_PLACE.MM120} piece of 120mm fan(s)</li>\r\n             <li>Supports maximum {componentType.selected.FAN_PLACE.MM140} piece of 140mm fan(s)</li>\r\n             <li>Supports maximum {componentType.selected.FAN_PLACE.MM200} piece of 200mm fan(s)</li>\r\n             <li>Overall fan support: maximum {componentType.selected.MAX_FAN_PLACE} fan(s)</li>\r\n             <li>Processor cooler maximum size: {componentType.selected.CPU_COOLER_MAX_HEIGHT}</li>\r\n             <li>Liquid cooler support: {componentType.selected.RADIATOR_SUPPORT ? \"Supported\" : \"Not supported\"}</li>\r\n             <li>Supports maximum: {componentType.selected.VGA_MAX_LENGTH} graphic card</li>\r\n             {componentType.selected.MOBO_SUPPORT !== undefined && <li><ul>Supported motherboards: {componentType.selected.MOBO_SUPPORT.map((mobo, index) => <li key={index}>{mobo},</li>)}</ul></li>}\r\n             <li>2.5\" SSD place: {componentType.selected.SSD_PLACE}</li>\r\n             <li>3.5\" HDD place: {componentType.selected.HDD_PLACE}</li> </ul>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CreateCoolerInfo({componentType}) {\r\n    \r\n    return (\r\n        <ul>\r\n            <li>Type: {componentType.selected.COOLING_TYPE}</li>\r\n            {componentType.SUPPORTED_SOCKETS !== undefined && <li><ul>{componentType.selected.SUPPORTED_SOCKETS.map(socket => <li>{socket},</li>)}</ul></li>}\r\n            <li>Airflow: {componentType.selected.AIRFLOW}</li>\r\n            <li>Height: {componentType.selected.HEIGHT}</li>\r\n            <li>Width: {componentType.selected.WIDTH}</li>\r\n            <li>120mm Case slot required: {componentType.selected.SLOT_COUNTER_120MM}</li>\r\n            <li>140mm Case slot required: {componentType.selected.SLOT_COUNTER_140MM}</li>\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CreateProcessorInfo({componentType}) {\r\n    \r\n    return (\r\n        <ul>\r\n            <li>Socket: {componentType.selected.SOCKET}</li>\r\n            <li>Base Clock: {componentType.selected.BASE_CLOCK}</li>\r\n            <li>Overclock: {componentType.selected.OVERCLOCK ? \"Supported\" : \"Not supported\"}</li>\r\n            <li>Cores: {componentType.selected.CORES}</li>\r\n            <li>Threads: {componentType.selected.THREADS}</li>\r\n            <li>Maximum Clock: {componentType.selected.MAX_CLOCK}</li>\r\n            <li>Maximum Memory: {componentType.selected.MAX_MEMORY}</li>\r\n            <li>Maximum Memory Speed: {componentType.selected.MAX_MEMORY_SPEED}</li>\r\n            <li>Supported Memory Type: {componentType.selected.MEMORY_TYPE}</li>\r\n            <li>TDP: {componentType.selected.TDP}</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function CreateFanInfo({componentType}) {\r\n    \r\n    return (\r\n        <div>\r\n             {componentType.selected.SIZE !== undefined && <ul>\r\n             {componentType.selected.SIZE.MM140 !== undefined && <li>Required 140mm slot: {componentType.selected.SIZE.MM140}</li>}\r\n             {componentType.selected.SIZE.MM120 !== undefined && <li>Required 120mm slot: {componentType.selected.SIZE.MM120}</li>}\r\n             {componentType.selected.SIZE.MM200 !== undefined && <li>Required 200mm slot: {componentType.selected.SIZE.MM200}</li>}\r\n             </ul>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CreateGraphicCardInfo({componentType}) {\r\n    \r\n    return (\r\n        <ul>\r\n            <li>Card Memory: {componentType.selected.CARD_MEMORY}</li>\r\n            <li>Length: {componentType.selected.CARD_LENGTH}</li>\r\n            <li>Cooling Fan: {componentType.selected.FAN}</li>\r\n            <li>Recommended Psu: {componentType.selected.RECOMMENDED_PSU}</li>\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CreateHddInfo({componentType}) {\r\n    \r\n    return (\r\n        <ul>\r\n            <li>Case slot size: {componentType.selected.CASE_SLOT}\"</li>\r\n            <li>Connection: {componentType.selected.CONNECTION_TYPE}</li>\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CreateMemoryInfo({componentType}) {\r\n    \r\n    return (\r\n        <ul>\r\n             <li>Type: {componentType.selected.MEMORY_TYPE}</li>\r\n             <li>Speed: {componentType.selected.MEMORY_SPEED}</li>\r\n             <li>Latency: {componentType.selected.MEMORY_LATENCY}</li>\r\n             <li>{componentType.selected.MEMORY_KIT} piece kit</li>\r\n             <li>Capacity each: {componentType.selected.CAPACITY_EACH}</li>\r\n             <li>Full capacity: {componentType.selected.CAPACITY_FULL}</li>\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CreateMotherboardInfo({componentType}) {\r\n    \r\n    return (\r\n        <ul>\r\n            <li>Chipset: {componentType.selected.CHIPSET}</li>\r\n            <li>Socket: {componentType.selected.SOCKET}</li>\r\n            <li>Size: {componentType.selected.SIZE}</li>\r\n            <li>Overclock: {componentType.selected.OVERCLOCK ? \"Supported\" : \"Not supported\"}</li>\r\n            <li>Maximum Memory: {componentType.selected.MAX_MEMORY}</li>\r\n            <li>Maximum Memory Speed: {componentType.selected.MAX_MEMORY_SPEED}</li>\r\n            <li>Memory Slots: {componentType.selected.MEMORY_SLOT}</li>\r\n            <li>Supported Memory Type: {componentType.selected.MEMORY_TYPE}</li>\r\n            <li>Supported M.2 SSD: {componentType.selected.M_2_SLOT}</li>\r\n            <li>Supported SATA SSD: {componentType.selected.SATA_SLOT_FULL}</li>\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CreateSsdInfo({componentType}) {\r\n    \r\n    return (\r\n        <ul>\r\n            {componentType.selected.CASE_SLOT !== \"0\" && <li>Case slot size: {componentType.selected.CASE_SLOT}\"</li>}\r\n            <li>Connection: {componentType.selected.CONNECTION_TYPE}</li>\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CreatePsuInfo({componentType}) {\r\n    \r\n    return (\r\n        <ul>\r\n            <li>Power: {componentType.selected.POWER}</li>\r\n        </ul>\r\n    )\r\n}\r\n","import CreateCaseInfo from '../infoHandlers/CreateCaseInfo'\r\nimport CreateCoolerInfo from '../infoHandlers/CreateCoolerInfo'\r\nimport CreateProcessorInfo from '../infoHandlers/CreateProcessorInfo'\r\nimport CreateFanInfo from '../infoHandlers/CreateFanInfo'\r\nimport CreateGraphicCardInfo from '../infoHandlers/CreateGraphicCardInfo'\r\nimport CreateHddInfo from '../infoHandlers/CreateHddInfo'\r\nimport CreateMemoryInfo from '../infoHandlers/CreateMemoryInfo'\r\nimport CreateMotherboardInfo from '../infoHandlers/CreateMotherboardInfo'\r\nimport CreateSsdInfo from '../infoHandlers/CreateSsdInfo'\r\nimport CreatePsuInfo from '../infoHandlers/CreatePsuInfo'\r\n\r\nfunction CreateMoreInfo({componentType}) {\r\n    return (\r\n        <div>\r\n            \r\n            {componentType.keyWord === \"CPU\" && <CreateProcessorInfo componentType={componentType}/>}\r\n            {componentType.keyWord === \"MOBO\" && <CreateMotherboardInfo componentType={componentType}/>}\r\n            {componentType.keyWord === \"RAM\" && <CreateMemoryInfo componentType={componentType}/>}\r\n            {componentType.keyWord === \"COOLER\" && <CreateCoolerInfo componentType={componentType}/>}\r\n            {componentType.keyWord === \"GPU\" && <CreateGraphicCardInfo componentType={componentType}/>}\r\n            {componentType.keyWord === \"CASE\" && <CreateCaseInfo componentType={componentType}/>}\r\n            {componentType.keyWord === \"PSU\" && <CreatePsuInfo componentType={componentType}/>}\r\n            {componentType.keyWord.includes(\"FAN\") && <CreateFanInfo componentType={componentType}/>}\r\n            {componentType.keyWord.includes(\"SSD\") && <CreateSsdInfo componentType={componentType}/>}\r\n            {componentType.keyWord.includes(\"HDD\") && <CreateHddInfo componentType={componentType}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateMoreInfo","import { useState } from 'react'\r\nimport CreateErrorMessage from './CreateErrorMessage'\r\nimport getObjectByType from '../getFunctions/getObjectByType'\r\nimport CreateMoreInfo from './CreateMoreInfo'\r\n\r\nfunction CreateComponentRow({componentType, componentTypesList, setComponentTypesList, errorCheckers}) {\r\n\r\n    const [ moreInfoIsVisible, setMoreInfoIsVisible ] = useState(false)\r\n\r\n    const onChangeHandler = (event) => {\r\n        let selectedObject = getObjectByType(componentType.type, event.target.value)\r\n        let newComponentList = [...componentTypesList]\r\n        newComponentList.map(comp => comp.id === componentType.id ? comp.selected = selectedObject : \"\")\r\n        setComponentTypesList(newComponentList)\r\n    }\r\n\r\n    const removeHandler = () => {\r\n        let newComponentTypeList = componentTypesList.filter(component => component.id !== componentType.id)\r\n        setComponentTypesList(newComponentTypeList)\r\n    }\r\n\r\n    const moreInfoHandler = () => {\r\n        moreInfoIsVisible ? setMoreInfoIsVisible(false) : setMoreInfoIsVisible(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"component-list\">\r\n                <div className=\"component-image-container\">\r\n                    <img className=\"component-image\" src={componentType.selected.IMG} alt=\"component_pic\"/>\r\n                </div>\r\n                <ul className=\"component-row\">\r\n                    <li>\r\n                        <div className=\"component-name\"><p>{componentType.name}</p></div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"component-type\"><p>{componentType.selected.TYPE}</p></div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"component-price\"><p>{componentType.selected.PRICE}</p></div>\r\n                    </li>\r\n                    <li className=\"component-selector-container\">\r\n                        <select className=\"component-selector\" onChange={(event)=>onChangeHandler(event)}>\r\n                            {componentType.type.map((selector, index) => \r\n                            selector.SOCKET !== undefined \r\n                            ? <option key={index}>{selector.TYPE} --- SOCKET {selector.SOCKET} --- {selector.PRICE}</option>\r\n                            : <option key={index}>{selector.TYPE} --- {selector.PRICE}</option>\r\n                            )}\r\n                        </select>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n                <ul>\r\n                {moreInfoIsVisible && \r\n                    <li className=\"component-info-container\">\r\n                        <CreateMoreInfo componentType={componentType}/>\r\n                    </li>}\r\n                    <li className=\"component-button-container\">\r\n                        <button className=\"hover-btn component-info-btn\" onClick={moreInfoHandler}>MORE INFO 🡃</button>\r\n                    </li>\r\n                    {componentType.keyWord.includes(\"EXTRA\") && \r\n                    <li className=\"component-remove-button-container\">\r\n                        <button className=\"hover-btn component-remove-btn\" onClick={removeHandler}>REMOVE</button>\r\n                    </li>}\r\n                    <div className=\"error-container\"><CreateErrorMessage errorCheckers={errorCheckers} componentTypesList={componentTypesList} componentType={componentType}/></div>\r\n                </ul>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default CreateComponentRow","function getTotalPrice(array, setTotalPrice) {\r\n    let initialValue = 0\r\n    setTotalPrice(array.reduce(\r\n        (accumulator, currentValue) => accumulator + parseInt(currentValue.selected.PRICE.split(\" \").join(\"\"))\r\n        , initialValue\r\n    ))\r\n}\r\n\r\nexport default getTotalPrice","import { v4 as uuidv4 } from 'uuid';\r\nimport { defaultType, defaultPrice } from '../defaultComponentTypeList/defaultComponentTypeList'\r\n\r\nfunction addExtraComponent(componentTypesList, setComponentTypesList, defaultImage, componentTypeKeyWord) {\r\n    let newObject = {...componentTypesList.find(component => component.keyWord === componentTypeKeyWord)}\r\n    newObject.id = uuidv4()\r\n    newObject.selected = {TYPE : defaultType, PRICE : defaultPrice, IMG : defaultImage, DEFAULT : true}\r\n    newObject.name = \"Extra \" + newObject.name\r\n    newObject.keyWord = \"EXTRA \" + componentTypeKeyWord\r\n    setComponentTypesList([...componentTypesList, newObject])\r\n}\r\n\r\nexport default addExtraComponent","export default __webpack_public_path__ + \"static/media/chevron-left-solid.310de47d.svg\";","export default __webpack_public_path__ + \"static/media/chevron-right-solid.c3ee4024.svg\";","import { useState, useEffect } from 'react'\r\nimport leftArrowIcon from '../icons/chevron-left-solid.svg'\r\nimport rightArrowIcon from '../icons/chevron-right-solid.svg'\r\n\r\nfunction SearchResultComponent({searchInput, componentTypesList, setComponentTypesList}) {\r\n\r\n    const [ filteredResultList, setFilteredResultList ] = useState([])\r\n    const [ firstShownResultIndex, setFirstShownResultIndex ] = useState(0)\r\n    const [ lastShownResultIndex, setLastShownResultIndex ] = useState(5)\r\n\r\n    const searchAllElement = () => {\r\n        let resultList = []\r\n        let keywords = searchInput.toLowerCase().split(\" \")\r\n        for (let element of componentTypesList) {\r\n            let filteredList = element.type.filter(component => \r\n                keywords.every(keyword => component.TYPE.toLowerCase().includes(keyword)))\r\n            resultList.push(...filteredList)\r\n        }\r\n        return resultList\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchInput.length > 2) {\r\n            setFilteredResultList(searchAllElement)\r\n            setFirstShownResultIndex(0)\r\n            setLastShownResultIndex(5)\r\n        }\r\n    }, [searchInput]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const paginatorLeftHandler = () => {\r\n        if (firstShownResultIndex >= 5 && lastShownResultIndex >= 10) {\r\n            setFirstShownResultIndex(firstShownResultIndex-5)\r\n            setLastShownResultIndex(lastShownResultIndex-5)\r\n        }\r\n    }\r\n\r\n    const paginatorRightHandler = () => {\r\n        if (firstShownResultIndex <= filteredResultList.length-5 && lastShownResultIndex <= filteredResultList.length-1) {\r\n            setFirstShownResultIndex(firstShownResultIndex+5)\r\n            setLastShownResultIndex(lastShownResultIndex+5)\r\n        }\r\n    }\r\n\r\n    const setComponentIntoList = (resultComponent) => {\r\n        let newComponentTypeList = [...componentTypesList]\r\n        newComponentTypeList.map(component => !component.keyWord.includes(\"EXTRA\") && component.type.includes(resultComponent) ? component.selected = resultComponent : \"\")\r\n        setComponentTypesList(newComponentTypeList)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <button className=\"paging-btn\" onClick={paginatorLeftHandler}><img src={leftArrowIcon} alt=\"left_arrow\"/></button>\r\n            <div className=\"search-result-cards\">\r\n                {filteredResultList.slice(firstShownResultIndex, lastShownResultIndex).map((result, index) => \r\n                    <div key={index} className=\"search-result-card\">\r\n                        <h1 className=\"search-result-type\">{result.TYPE}</h1>\r\n                        <h1 className=\"search-result-price\">{result.PRICE}</h1>\r\n                        <div className=\"search-result-image-container\"><img className=\"search-result-image\" src={result.IMG} alt=\"result_component_image\"/></div>\r\n                        <button className=\"use-this-component-btn\" onClick={()=>setComponentIntoList(result)}>Use this Compoenent</button>\r\n                    </div>)}\r\n            </div>\r\n            <button className=\"paging-btn\" onClick={paginatorRightHandler}><img src={rightArrowIcon} alt=\"right_arrow\"/></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResultComponent","export const errorCheckers = {\r\n    cpuMoboCompatibilityCheck : function(cpu, mobo) {\r\n        if (cpu.SOCKET !== undefined && mobo.SOCKET !== undefined && cpu.SOCKET !== mobo.SOCKET) \r\n        return `The Choosen Processor & Motherboard has different socket type, for this Processor you must have choose a SOCKET ${cpu.SOCKET} Motherboard!`\r\n        return false\r\n    },\r\n    cpuMaxMemoryCheck : function(cpu, ram) {\r\n        if (cpu.MAX_MEMORY !== undefined && ram.CAPACITY_FULL !== undefined && parseInt(cpu.MAX_MEMORY) < parseInt(ram.CAPACITY_FULL)) \r\n        return `This processor only supports ${cpu.MAX_MEMORY} of memory, please choose maximum ${cpu.MAX_MEMORY} of memory or a higher grade processor!`\r\n        return false\r\n    },\r\n    cpuMaxMemorySpeedCheck : function(cpu, ram) {\r\n        if (cpu.MAX_MEMORY_SPEED !== undefined && ram.MEMORY_SPEED !== undefined && parseInt(cpu.MAX_MEMORY_SPEED) < parseInt(ram.MEMORY_SPEED)) \r\n        return `This processor only supports ${cpu.MAX_MEMORY_SPEED} of memory speed, that means originally your processor will downgrade your memory speed to ${cpu.MAX_MEMORY_SPEED}, at the motherboards BIOS system you can overclock that speed to the maximum that your choosen motherboard supports!`\r\n        return false\r\n    },\r\n    cpuCoolerQualityCheck : function(cpu, cooler) {\r\n        if (cpu.GAMING_RANGE !== undefined && cooler.COOLER_RANGE !== undefined && cpu.GAMING_RANGE > cooler.COOLER_RANGE) \r\n        return `At maximum performance this processor could heat up to ${cpu.MAX_TEMP}, too much heat could damage your processor and shorter its lifetime. A higher grade processor cooler is advised for this processor!`\r\n        return false\r\n    },\r\n    cpuCoolerCaseSizeCheck : function(cooler, pcCase) {\r\n        if (cooler.HEIGHT !== undefined && pcCase.CPU_COOLER_MAX_HEIGHT !== undefined && parseInt(pcCase.CPU_COOLER_MAX_HEIGHT) < parseInt(cooler.HEIGHT)) \r\n        return `The selected processor coolers heigth is ${cooler.HEIGHT}, this pc case is supports maximum ${pcCase.CPU_COOLER_MAX_HEIGHT} processor coolers!`\r\n        return false\r\n    },\r\n    cpuMoboOverclockCheck : function(cpu, mobo) {\r\n        if (cpu.OVERCLOCK !== undefined && mobo.OVERCLOCK !== undefined && cpu.OVERCLOCK && !mobo.OVERCLOCK) return `This motherboard has no opportunity to overclock processors, but you selected an unlocked processor, this in itself not couse any problem but you won't be able to overclock your processor at all, if you planning to make any processor overclock please select an other motherboard!`\r\n        if (cpu.OVERCLOCK !== undefined && mobo.OVERCLOCK !== undefined && !cpu.OVERCLOCK && mobo.OVERCLOCK) return `This processor has no opportunity to overclock, but you selected an unlocked motherboard, this in itself not couse any problem but you won't be able to overclock your processor at all, if you planning to make any processor overclock please select an other processor!`\r\n        return false\r\n    },\r\n    moboMaxMemoryCheck : function(mobo, ram) {\r\n        if (mobo.MAX_MEMORY !== undefined && ram.CAPACITY_FULL !== undefined && parseInt(mobo.MAX_MEMORY) < parseInt(ram.CAPACITY_FULL)) \r\n        return `This motherboard only supports ${mobo.MAX_MEMORY} of memory, please choose maximum ${mobo.MAX_MEMORY} of memory or higher grade motherboard!`\r\n        return false\r\n    },\r\n    moboCoolerSocketCheck : function(mobo, cooler) {\r\n        if (mobo.SOCKET !== undefined && cooler.SUPPORTED_SOCKETS !== undefined && !cooler.SUPPORTED_SOCKETS.includes(mobo.SOCKET)) \r\n        return `This cooler is not support SOCKET ${mobo.SOCKET} motherboards, please choose an other cooler or motherboard!`\r\n        return false\r\n    },\r\n    ramBottleneckCheck : function(mobo, ram) {\r\n        if (mobo.MAX_MEMORY_SPEED !== undefined && ram.MEMORY_SPEED !== undefined && parseInt(mobo.MAX_MEMORY_SPEED) < parseInt(ram.MEMORY_SPEED)) \r\n        return `This memory speed is above the maximum supported memory speed of the motherboard, if you keep this setting your memory will work only in ${mobo.MAX_MEMORY_SPEED}!`\r\n        return false\r\n    },\r\n    ramMoboCompatibilityCheck : function(mobo, ram) {\r\n        if (mobo.MEMORY_TYPE !== undefined && ram.MEMORY_TYPE !== undefined && mobo.MEMORY_TYPE !== ram.MEMORY_TYPE) \r\n        return `This motherboard only supports ${mobo.MEMORY_TYPE} type memories, please choose a ${mobo.MEMORY_TYPE} memory or choose an other motherboard!`\r\n        return false\r\n    },\r\n    vgaCaseSizeCheck : function(vga, pcCase) {\r\n        if (vga.CARD_LENGTH !== undefined && pcCase.VGA_MAX_LENGTH !== undefined && parseInt(pcCase.VGA_MAX_LENGTH) < parseInt(vga.CARD_LENGTH)) \r\n        return `This PC case is supports maximum ${pcCase.VGA_MAX_LENGTH} length graphic cards, your selected graphic cards length is ${vga.CARD_LENGTH}, please choose an other PC case or a shorter graphic card!`\r\n        return false\r\n    },\r\n    vgaPsuPowerCheck : function(vga, psu) {\r\n        if (vga.RECOMMENDED_PSU !== undefined && psu.POWER !== undefined && parseInt(psu.POWER) < parseInt(vga.RECOMMENDED_PSU)) \r\n        return `The selected power supply unit (PSU) has ${psu.POWER} of power, your selected graphic card needs at least ${vga.RECOMMENDED_PSU} of power, please select an other power supply unit, or graphic card!`\r\n        return false\r\n    },\r\n    caseCoolerFanCheck : function(pcCase, cooler, fanArray) {\r\n        let msg = \"\"\r\n        if (cooler.COOLING_TYPE !== undefined && cooler.COOLING_TYPE === \"LIQUID\") msg = ` Note that your selected processor cooler's radiator needs free slots too, check the processor cooler's additional information about how many free slots required to properly attach this processor cooler!`\r\n        let fanCounterOverall = 0\r\n        let fanCounter120mm = 0\r\n        let fanCounter140mm = 0\r\n        let fanCounter200mm = 0\r\n        if (cooler.SLOT_COUNTER_120MM !== undefined && cooler.SLOT_COUNTER_120MM > 0) fanCounter120mm+= cooler.SLOT_COUNTER_120MM\r\n        if (cooler.SLOT_COUNTER_140MM !== undefined && cooler.SLOT_COUNTER_140MM > 0) fanCounter140mm+= cooler.SLOT_COUNTER_140MM\r\n        fanArray.map(fan => fan.selected.SIZE !== undefined && fan.selected.SIZE.MM120 > 0 ? fanCounter120mm+= fan.selected.SIZE.MM120 : \"\")\r\n        fanArray.map(fan => fan.selected.SIZE !== undefined && fan.selected.SIZE.MM140 > 0 ? fanCounter140mm+= fan.selected.SIZE.MM140 : \"\")\r\n        fanArray.map(fan => fan.selected.SIZE !== undefined && fan.selected.SIZE.MM200 > 0 ? fanCounter200mm+= fan.selected.SIZE.MM200 : \"\")\r\n        fanCounterOverall = fanCounter120mm+fanCounter140mm+fanCounter200mm\r\n        if (pcCase.MAX_FAN_PLACE !== undefined && fanCounterOverall > pcCase.MAX_FAN_PLACE) return `This pc case support maximum ${pcCase.MAX_FAN_PLACE} of case fans, please select less case fans or an other pc case!`+msg\r\n        if (pcCase.MAX_FAN_PLACE !== undefined && fanCounter120mm > pcCase.FAN_PLACE.MM120) return `This pc case support maximum ${pcCase.FAN_PLACE.MM120} of 120mm case fans, please select less case fans or an other pc case!`+msg\r\n        if (pcCase.MAX_FAN_PLACE !== undefined && fanCounter140mm > pcCase.FAN_PLACE.MM140) return `This pc case support maximum ${pcCase.FAN_PLACE.MM140} of 140mm case fans, please select less case fans or an other pc case!`+msg\r\n        if (pcCase.MAX_FAN_PLACE !== undefined && fanCounter200mm > pcCase.FAN_PLACE.MM200) return `This pc case support maximum ${pcCase.FAN_PLACE.MM200} of 200mm case fans, please select less case fans or an other pc case!`+msg\r\n        return false\r\n    },\r\n    caseCoolerFanCheckWithPreBuildFan : function(pcCase, cooler, fanArray) {\r\n        let msg = \"\"\r\n        if (cooler.COOLING_TYPE !== undefined && cooler.COOLING_TYPE === \"LIQUID\") msg = ` Note that your selected processor cooler's radiator needs free slots too, check the processor cooler's additional information about how many free slots required to properly attach this processor cooler!`\r\n        let fanCounterOverall = 0\r\n        let fanCounter120mm = 0\r\n        let fanCounter140mm = 0\r\n        let fanCounter200mm = 0\r\n        if (pcCase.BUILT_FAN !== undefined && pcCase.BUILT_FAN.MM120 > 0) fanCounter120mm+= pcCase.BUILT_FAN.MM120\r\n        if (pcCase.BUILT_FAN !== undefined && pcCase.BUILT_FAN.MM140 > 0) fanCounter140mm+= pcCase.BUILT_FAN.MM140\r\n        if (pcCase.BUILT_FAN !== undefined && pcCase.BUILT_FAN.MM200 > 0) fanCounter200mm+= pcCase.BUILT_FAN.MM200\r\n        if (cooler.SLOT_COUNTER_120MM !== undefined && cooler.SLOT_COUNTER_120MM > 0) fanCounter120mm+= cooler.SLOT_COUNTER_120MM\r\n        if (cooler.SLOT_COUNTER_140MM !== undefined && cooler.SLOT_COUNTER_140MM > 0) fanCounter140mm+= cooler.SLOT_COUNTER_140MM\r\n        fanArray.map(fan => fan.selected.SIZE !== undefined && fan.selected.SIZE.MM120 > 0 ? fanCounter120mm+= fan.selected.SIZE.MM120 : \"\")\r\n        fanArray.map(fan => fan.selected.SIZE !== undefined && fan.selected.SIZE.MM140 > 0 ? fanCounter140mm+= fan.selected.SIZE.MM140 : \"\")\r\n        fanArray.map(fan => fan.selected.SIZE !== undefined && fan.selected.SIZE.MM200 > 0 ? fanCounter200mm+= fan.selected.SIZE.MM200 : \"\")\r\n        fanCounterOverall = fanCounter120mm+fanCounter140mm+fanCounter200mm\r\n        if (pcCase.MAX_FAN_PLACE !== undefined && fanCounterOverall > pcCase.MAX_FAN_PLACE) return `This pc case has pre-built fan(s) & supports maximum ${pcCase.MAX_FAN_PLACE} of case fans, check the pc case's additional information about how many pre-build case fan this pc case has, if you planning to replace the pre-built fans with your choosen ones you can ignore this message.`+msg\r\n        if (pcCase.MAX_FAN_PLACE !== undefined && fanCounter120mm > pcCase.FAN_PLACE.MM120) return `This pc case has pre-built fan(s) & support maximum ${pcCase.FAN_PLACE.MM120} of 120mm case fans, check the pc case's additional information about how many pre-build case fan this pc case has, if you planning to replace the pre-built fans with your choosen ones you can ignore this message.`+msg\r\n        if (pcCase.MAX_FAN_PLACE !== undefined && fanCounter140mm > pcCase.FAN_PLACE.MM140) return `This pc case has pre-built fan(s) & support maximum ${pcCase.FAN_PLACE.MM140} of 140mm case fans, check the pc case's additional information about how many pre-build case fan this pc case has, if you planning to replace the pre-built fans with your choosen ones you can ignore this message.`+msg\r\n        if (pcCase.MAX_FAN_PLACE !== undefined && fanCounter200mm > pcCase.FAN_PLACE.MM200) return `This pc case has pre-built fan(s) & support maximum ${pcCase.FAN_PLACE.MM200} of 200mm case fans, check the pc case's additional information about how many pre-build case fan this pc case has, if you planning to replace the pre-built fans with your choosen ones you can ignore this message.`+msg\r\n        return false\r\n    },\r\n    moboSataSlotCheck : function(mobo, ssdArray, hddArray) {\r\n        let sataCounter = 0\r\n        ssdArray.map(ssd => ssd.selected.CONNECTION_TYPE !== undefined && (ssd.selected.CONNECTION_TYPE === \"SATA3\" || ssd.selected.CONNECTION_TYPE === \"SATA2\") ? sataCounter++ : \"\")\r\n        hddArray.map(hdd => hdd.selected.CONNECTION_TYPE !== undefined && (hdd.selected.CONNECTION_TYPE === \"SATA3\" || hdd.selected.CONNECTION_TYPE === \"SATA2\") ? sataCounter++ : \"\")\r\n        if (mobo.SATA_SLOT_FULL !== undefined && sataCounter > mobo.SATA_SLOT_FULL) return `This motherboard supports maximum ${mobo.SATA_SLOT_FULL} SATA connected devices, please select less SSD or HDD that requires SATA connection, or choose an other motherboard!`\r\n        return false\r\n    },\r\n    caseSsdPlaceCheck : function(pcCase, ssdArray) {\r\n        let ssdCounter = 0\r\n        ssdArray.map(ssd => ssd.selected.CASE_SLOT !== undefined && ssd.selected.CASE_SLOT === \"2.5\" ? ssdCounter++ : \"\")\r\n        if (pcCase.SSD_PLACE !== undefined && ssdCounter > pcCase.SSD_PLACE) return `This pc case has maximum ${pcCase.SSD_PLACE} SSD place, please select less 2.5\" SSD or choose an other pc case!`\r\n        return false\r\n    },\r\n    caseHddPlaceCheck : function(pcCase, hddArray) {\r\n        let hddCounter = 0\r\n        hddArray.map(hdd => hdd.selected.CASE_SLOT !== undefined && hdd.selected.CASE_SLOT === \"3.5\" ? hddCounter++ : \"\")\r\n        if (pcCase.HDD_PLACE !== undefined && hddCounter > pcCase.HDD_PLACE) return `This pc case has maximum ${pcCase.HDD_PLACE} HDD place, please select less 3.5\" HDD or choose an other pc case!`\r\n        return false\r\n    },\r\n    moboM2PlaceCheck : function(mobo, ssdArray) {\r\n        let m2Counter = 0\r\n        ssdArray.map(ssd => ssd.selected.CONNECTION_TYPE !== undefined && ssd.selected.CONNECTION_TYPE === \"M.2\" ? m2Counter++ : \"\")\r\n        if (mobo.M_2_SLOT !== undefined && m2Counter > mobo.M_2_SLOT) return `This motherboard supports maximum ${mobo.M_2_SLOT} of M.2 SSD, please select less M.2 SSD or choose an other motherboard!`\r\n        return false\r\n    }\r\n}\r\n\r\n ","import hzbImage from '../images/horizonzerodawn.gif'\r\nimport cyberpunkImage from '../images/cyberpunk2077.gif'\r\nimport battlefieldvImage from '../images/battlefieldv.gif'\r\nimport valhallaImage from '../images/assassinscreedvalhalla.gif'\r\nimport fortniteImage from '../images/fortnite.gif'\r\n\r\nexport const gameList = [\r\n    {name : \"Horizon Zero Dawn\", pic : hzbImage, gameObject : \"HZD\"},\r\n    {name : \"Cyberpunk 2077\", pic : cyberpunkImage, gameObject : \"CYBERPUNK2077\"},\r\n    {name : \"Battlefield V\", pic : battlefieldvImage, gameObject : \"BATTLEFIELDV\"},\r\n    {name : \"Assassin's Creed Valhalla\", pic : valhallaImage, gameObject : \"ACVH\"},\r\n    {name : \"Fortnite\", pic : fortniteImage, gameObject : \"FORTNITE\"}\r\n  ]","export default __webpack_public_path__ + \"static/media/horizonzerodawn.4c21ec02.gif\";","export default __webpack_public_path__ + \"static/media/cyberpunk2077.0614a523.gif\";","export default __webpack_public_path__ + \"static/media/battlefieldv.9f43411f.gif\";","export default __webpack_public_path__ + \"static/media/assassinscreedvalhalla.9087fdd2.gif\";","export default __webpack_public_path__ + \"static/media/fortnite.b79d54c7.gif\";","import { Doughnut } from 'react-chartjs-2';\r\n\r\nfunction CreateDoughnutChart({performance1080p, performance1440p, performance2160p}) {\r\n\r\n    const data = () => {\r\n        return {\r\n            datasets: [{\r\n                data: [performance1080p, performance1440p, performance2160p],\r\n                backgroundColor: [\r\n                  'rgb(255, 99, 132)',\r\n                  'rgb(54, 162, 235)',\r\n                  'rgb(255, 205, 86)'\r\n                ],\r\n                hoverOffset: 4,\r\n                offset: 0,\r\n                cutout: 118\r\n              }]\r\n        };\r\n    }\r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"doughnut-game-performance-chart\">\r\n           <Doughnut className=\"doughnut-chart\" data={data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateDoughnutChart","import CreateDoughnutChart from './CreateDoughnutChart'\r\n\r\nfunction CreateGamePerformanceCard({componentTypesList, gameName, gamePic, gameObject}) {\r\n\r\n    const selectedVga = componentTypesList.find(comp => comp.keyWord === \"GPU\") !== undefined && componentTypesList.find(comp => comp.keyWord === \"GPU\").selected\r\n\r\n    const calculateBottleneck = (resolution) => {\r\n        let selectedGpu = componentTypesList.find(comp => comp.keyWord === \"GPU\")\r\n        let selectedCpu = componentTypesList.find(comp => comp.keyWord === \"CPU\")\r\n        let selectedRam = componentTypesList.find(comp => comp.keyWord === \"RAM\")\r\n\r\n        if (selectedGpu !== undefined && selectedGpu.selected.GAMING_SCORE !== undefined &&\r\n            selectedCpu !== undefined && selectedCpu.selected.GAMING_SCORE !== undefined &&\r\n            selectedRam !== undefined && selectedRam.selected.GAMING_SCORE !== undefined) {\r\n                if (selectedCpu.selected.GAMING_SCORE < selectedGpu.selected.GAMING_SCORE * 0.1) {\r\n                    if (selectedRam.selected.GAMING_SCORE > 50000) {\r\n                        let multiplier = (((selectedRam.selected.GAMING_SCORE - 50000) / 5000) * 0.01) + 1\r\n                        return ((selectedCpu.selected.GAMING_SCORE / (selectedGpu.selected.GAMING_SCORE * 0.1)) * selectedGpu.selected[resolution][gameObject] * multiplier).toFixed(0)\r\n                  } else if (selectedRam.selected.GAMING_SCORE < 50000) {\r\n                        let multiplier = 1 - (((50000 - selectedRam.selected.GAMING_SCORE) / 5000) * 0.01)\r\n                        return ((selectedCpu.selected.GAMING_SCORE / (selectedGpu.selected.GAMING_SCORE * 0.1)) * selectedGpu.selected[resolution][gameObject] * multiplier).toFixed(0)\r\n                    }\r\n                    return ((selectedCpu.selected.GAMING_SCORE / (selectedGpu.selected.GAMING_SCORE * 0.1)) * selectedGpu.selected[resolution][gameObject]).toFixed(0)\r\n                } else {\r\n                    if (selectedRam.selected.GAMING_SCORE > 50000) {\r\n                        let multiplier = (((selectedRam.selected.GAMING_SCORE - 50000) / 5000) * 0.01) + 1\r\n                        return (selectedGpu.selected[resolution][gameObject] * multiplier).toFixed(0)\r\n                    } else if (selectedRam.selected.GAMING_SCORE < 50000) {\r\n                        let multiplier = 1 - (((50000 - selectedRam.selected.GAMING_SCORE) / 5000) * 0.01)\r\n                        return (selectedGpu.selected[resolution][gameObject] * multiplier).toFixed(0)\r\n                    }\r\n                   return (selectedGpu.selected[resolution][gameObject]).toFixed(0)\r\n                }\r\n            }\r\n        }\r\n\r\n    return (\r\n            <div className=\"game-performance-card\">\r\n                <h1 className=\"game-name\">{gameName}</h1>\r\n                <div className=\"game-image-container\"><img className=\"game-image\" src={gamePic} alt=\"game_image\"/></div>\r\n                {selectedVga.FPS_RES_1080P !== undefined &&\r\n                    <CreateDoughnutChart\r\n                    performance1080p={calculateBottleneck(\"FPS_RES_1080P\")}\r\n                    performance1440p={calculateBottleneck(\"FPS_RES_1440P\")}\r\n                    performance2160p={calculateBottleneck(\"FPS_RES_2160P\")}\r\n                    />}\r\n                {selectedVga.FPS_RES_1080P !== undefined ? \r\n                <p className=\"game-performance\">1080p Ultra Settings: {calculateBottleneck(\"FPS_RES_1080P\")} FPS</p> : \r\n                <p className=\"game-performance\">1080p Ultra Settings: Calculation will done automatically after you selected more components!</p>\r\n                }\r\n                {selectedVga.FPS_RES_1440P !== undefined ?\r\n                <p className=\"game-performance\">1440p Ultra Settings: {calculateBottleneck(\"FPS_RES_1440P\")} FPS</p> : \r\n                <p className=\"game-performance\">1440p Ultra Settings: Calculation will done automatically after you selected more components!</p>}\r\n                {selectedVga.FPS_RES_2160P !== undefined ? \r\n                <p className=\"game-performance\">2160p Ultra Settings: {calculateBottleneck(\"FPS_RES_2160P\")} FPS</p> : \r\n                <p className=\"game-performance\">2160p Ultra Settings: Calculation will done automatically after you selected more components!</p>}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default CreateGamePerformanceCard","function getSelectedComponents(componentTypeList) {\r\n    let selectedOnly = []\r\n    componentTypeList.map(component => selectedOnly.push({name : component.name, keyWord: component.keyWord, selected : component.selected}))\r\n    return selectedOnly\r\n}\r\n\r\nexport default getSelectedComponents","import { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction saveBuild(buildName, userName, loggedInUserPrivilege, totalPrice, selectedComponents, loggedInUserEmail) {\r\n\r\n  if (loggedInUserPrivilege === \"admin\") {\r\n\r\n    fetch(`http://localhost:4000/api/SAVERACCOONBUILD`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      \"JWT\": localStorage.getItem('jwtToken'),\r\n      \"USER_EMAIL\": loggedInUserEmail,\r\n      \"BUILD_NAME\": buildName,\r\n      \"BUILD_PRICE\": totalPrice,\r\n      \"COMPONENT_LIST\": selectedComponents,\r\n      \"USER_NAME\" : userName,\r\n      \"BUILD_ID\" : uuidv4()\r\n    })})\r\n\r\n  } else {\r\n\r\n    fetch(`http://localhost:4000/api/SAVEBUILD`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      \"JWT\": localStorage.getItem('jwtToken'),\r\n      \"USER_EMAIL\": loggedInUserEmail,\r\n      \"BUILD_NAME\": buildName,\r\n      \"BUILD_PRICE\": totalPrice,\r\n      \"COMPONENT_LIST\": selectedComponents,\r\n      \"USER_NAME\" : userName,\r\n      \"BUILD_ID\" : uuidv4()\r\n    })})\r\n  }\r\n}\r\n\r\nexport default saveBuild","import getSelectedComponents from './getSelectedComponentOnly'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst getObjectFromCurrentBuild = (totalPrice, componentTypesList, buildName = \"Custom PC Build\") => {\r\n    return {name : buildName, id : uuidv4(), price : totalPrice, selectedComponents : getSelectedComponents(componentTypesList)}\r\n  }\r\n\r\nexport default getObjectFromCurrentBuild","function checkEveryComponentIsSelected(componentTypesList) {\r\n    if (componentTypesList.filter(component => component.selected.DEFAULT === true).length === 0) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default checkEveryComponentIsSelected","function checkThereIsNoError(componentTypesList) {\r\n    if (componentTypesList.filter(component => component.msg.error !== 0).length === 0) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default checkThereIsNoError","import '../sassFiles/out/App.css';\r\nimport { useState, useEffect } from 'react'\r\nimport CreateComponentRow from './CreateComponentRow'\r\nimport getTotalPrice from '../getFunctions/getTotalPrice'\r\nimport addExtraComponent from '../addExtraPcPart/addExtraComponent'\r\nimport defaultImage from '../images/default_pic.jpeg'\r\nimport SearchResultComponent from './SearchResultComponent'\r\nimport { errorCheckers } from '../errorCheckMessages/errorMessagesHandlers'\r\nimport { gameList } from '../gameList/gameList'\r\nimport CreateGamePerformanceCard from './CreateGamePercormanceCard'\r\nimport getSelectedComponents from '../getFunctions/getSelectedComponentOnly'\r\nimport saveBuild from '../data_fetch/saveBuildPostFetch'\r\nimport getObjectFromCurrentBuild from '../getFunctions/getObjectFromCurrentBuild'\r\nimport checkEveryComponentIsSelected from '../checkComponentList/checkEveryComponentIsSelected'\r\nimport checkThereIsNoError from '../checkComponentList/checkThereIsNoError'\r\n\r\nfunction PcBuilder({componentTypesList, setComponentTypesList, loggedInUserName, loggedInUserPrivilege, currentBag, setCurrentBag, loggedInUserEmail}) {\r\n\r\n    const [ totalPrice, setTotalPrice ] = useState(\"0 Ft\")\r\n    const [ searchInput, setSerachInput ] = useState(\"\")\r\n    const [ saveBuildFormIsVisible, setSaveBuildFormIsVisible ] = useState(false)\r\n    const [ searchComponentVisibility, setSearchComponentVisibility ] = useState(false)\r\n    const [ buildName, setBuildName ] = useState(\"Custom Build\")\r\n    const [ msgToUser, setMsgToUser ] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        getTotalPrice(componentTypesList, setTotalPrice)\r\n        if (checkEveryComponentIsSelected(componentTypesList) && checkThereIsNoError(componentTypesList)) setMsgToUser(\"\")\r\n      }, [componentTypesList])\r\n\r\n    const saveBuildFormHandler = () => {\r\n        saveBuildFormIsVisible ? setSaveBuildFormIsVisible(false) : setSaveBuildFormIsVisible(true)\r\n    }\r\n\r\n    const searchComponentVisibilityHandler = () => {\r\n        searchComponentVisibility ? setSearchComponentVisibility(false) : setSearchComponentVisibility(true)\r\n    }\r\n\r\n    const buildSaveHandler = () => {\r\n        if (checkEveryComponentIsSelected(componentTypesList)) {\r\n          if (checkThereIsNoError(componentTypesList)) {\r\n            buildName === \"\" ? \r\n            saveBuild(\"Custom Build\", loggedInUserName, loggedInUserPrivilege, totalPrice, getSelectedComponents(componentTypesList), loggedInUserEmail) :\r\n            saveBuild(buildName, loggedInUserName, loggedInUserPrivilege, totalPrice, getSelectedComponents(componentTypesList), loggedInUserEmail)\r\n            setMsgToUser(\"Your build is successfully saved! You can check it in Custom Builds or in your profile.\")\r\n            setSaveBuildFormIsVisible(false)\r\n          } else {\r\n            setMsgToUser(\"Cannot save your build if it's error(s) in it!\")\r\n          }\r\n        } else {\r\n          setMsgToUser(\"Please select every component before save!\")\r\n        }\r\n      }\r\n      \r\n      const addToBagHandler = () => {\r\n        if (checkEveryComponentIsSelected(componentTypesList)) {\r\n          if (checkThereIsNoError(componentTypesList)) {\r\n            setCurrentBag([...currentBag, getObjectFromCurrentBuild(totalPrice, componentTypesList)])\r\n          } else {\r\n            setMsgToUser(\"Cannot add your build to the bag if it's error(s) in it!\")\r\n          }\r\n        } else {\r\n          setMsgToUser(\"Select every component before add your build to the bag!\")\r\n        }\r\n      }\r\n\r\n    return (\r\n      <div className=\"component\">\r\n        {searchComponentVisibility &&\r\n          <div className=\"search-component\">\r\n            <input placeholder=\"Search\" onChange={(event) => setSerachInput(event.target.value)}/>\r\n            <button className=\"search-close-btn\" onClick={searchComponentVisibilityHandler}>X</button>\r\n            <div className=\"search-result-card-container\">\r\n              <SearchResultComponent searchInput={searchInput} componentTypesList={componentTypesList} setComponentTypesList={setComponentTypesList}/>\r\n            </div>\r\n          </div>}\r\n        <div className=\"builder-head-container\">\r\n          <div>\r\n            <h1>Total price: {totalPrice} Ft</h1>\r\n            <button onClick={saveBuildFormHandler} className=\"hover-btn\">Save This Build</button>\r\n            <button onClick={addToBagHandler} className=\"hover-btn\">Add To Bag</button>\r\n            <button onClick={searchComponentVisibilityHandler} className=\"hover-btn\">Search</button>\r\n          </div>\r\n          <div>\r\n            {saveBuildFormIsVisible &&\r\n              <div>\r\n                {loggedInUserName !== null ?\r\n                <div>\r\n                  <input onChange={(e)=>setBuildName(e.target.value)} placeholder=\"Custom Build\"></input>\r\n                  <button onClick={buildSaveHandler} className=\"hover-btn\">Add to custom builds</button>\r\n                </div> : \r\n                <div>\r\n                  <p>Login for build save!</p>\r\n                </div>}\r\n              </div>}\r\n          </div>\r\n        </div>\r\n      <div className=\"content\">\r\n        <div className=\"content-column-left\">\r\n          <p>{msgToUser}</p>\r\n          <div className=\"component-row-container\">\r\n            {componentTypesList.map((componentType, index) => <CreateComponentRow key={index} componentType={componentType} componentTypesList={componentTypesList} setComponentTypesList={setComponentTypesList} errorCheckers={errorCheckers}/>)}\r\n          </div>\r\n          <div className=\"extra-part-btn-container\">\r\n            <button className=\"hover-btn add-fan\" onClick={()=>addExtraComponent(componentTypesList, setComponentTypesList, defaultImage, \"FAN\")}>ADD FAN</button>\r\n            <button className=\"hover-btn add-ssd\" onClick={()=>addExtraComponent(componentTypesList, setComponentTypesList, defaultImage, \"SSD\")}>ADD SSD</button>\r\n            <button className=\"hover-btn add-hdd\" onClick={()=>addExtraComponent(componentTypesList, setComponentTypesList, defaultImage, \"HDD\")}>ADD HDD</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"content-column-right\">\r\n          <div className=\"game-performance-card-container\">\r\n            {gameList.map((game, i) => <CreateGamePerformanceCard key={i} componentTypesList={componentTypesList} gameName={game.name} gamePic={game.pic} gameObject={game.gameObject}/>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PcBuilder","import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst getObjectFromCustomBuild = (totalPrice, customBuildComponents, buildName = \"Custom PC Build\") => {\r\n    return {name : buildName, id : uuidv4(), price : totalPrice, selectedComponents : customBuildComponents}\r\n  }\r\n\r\nexport default getObjectFromCustomBuild","function deleteBuild(buildId, loggedInUserPrivilege) {\r\n\r\n  if (loggedInUserPrivilege === \"admin\") {\r\n\r\n    fetch(`http://localhost:4000/api/DELETERACCOONBUILD`,{\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          \"JWT\": localStorage.getItem('jwtToken'),\r\n          \"REMOVABLE_ID\" : buildId\r\n        })})\r\n\r\n    } else {\r\n      \r\n    fetch(`http://localhost:4000/api/DELETEBUILD`,{\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          \"JWT\": localStorage.getItem('jwtToken'),\r\n          \"REMOVABLE_ID\" : buildId\r\n        })})\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport default deleteBuild","import { v4 as uuidv4 } from 'uuid';\r\nimport { useHistory } from 'react-router-dom'\r\nimport getObjectFromCustomBuild from '../getFunctions/getObjectFromCustomBuild'\r\nimport deleteBuild from '../data_fetch/deleteBuildFetch'\r\n\r\nfunction CreateBuildCard({build, loggedInUserName, loggedInUserPrivilege, loggedInUserEmail, componentTypesList, setComponentTypesList, currentBag, setCurrentBag, setBuildIsUpToDate}) {\r\n\r\n    const history = useHistory();\r\n\r\n    const loadComponentsFromBuild = () => {\r\n        let buildObject = { ...build }\r\n        let ctl = [ ...componentTypesList ]\r\n        let master = []\r\n        buildObject.COMPONENT_LIST.map(component => {\r\n            let obj = {...ctl.find(object => component.keyWord.includes(object.keyWord))}\r\n                if (obj !== undefined) {\r\n                    obj.selected = component.selected\r\n                    obj.name = component.name\r\n                    obj.keyWord = component.keyWord\r\n                    obj.id = uuidv4()\r\n                }\r\n                return master.push(obj)\r\n        })\r\n        setComponentTypesList(master)\r\n        history.push(`/pcbuilder`);\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    const deleteBuildHandler = () => {\r\n        deleteBuild(build.BUILD_ID, loggedInUserPrivilege)\r\n        setBuildIsUpToDate(false)\r\n    }\r\n\r\n    const addToBagHandler = () => {\r\n        setCurrentBag([...currentBag, getObjectFromCustomBuild(build.BUILD_PRICE, build.COMPONENT_LIST, build.BUILD_NAME)])\r\n    }\r\n    \r\n    return (\r\n        <div className=\"build-card\">\r\n            <ul>\r\n                <li className=\"image-container\"><img width=\"300px\" src={build.COMPONENT_LIST.find(component => component.keyWord === \"CASE\").selected.IMG} alt=\"build_case_pic\"/></li>\r\n            </ul>\r\n            <ul>\r\n                <li>{build.BUILD_NAME}</li>\r\n                <li>Created by: {build.USER_NAME}</li>\r\n                <li>Price: {build.BUILD_PRICE} Ft</li>\r\n                <li>\r\n                    <ul>{build.COMPONENT_LIST.map((component, index) =>\r\n                         <li key={index}>\r\n                             <ul>\r\n                                 <li>{component.name}: {component.selected.TYPE}</li>\r\n                             </ul>\r\n                        </li>)}\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <ul>\r\n                <li><button className=\"hover-btn\" onClick={loadComponentsFromBuild}>Use this build in PC Builder</button></li>\r\n                <li><button className=\"hover-btn\" onClick={addToBagHandler}>Add to bag</button></li>\r\n                {build.USER_NAME === loggedInUserName && build.USER_EMAIL === loggedInUserEmail && <li><button className=\"hover-btn\" onClick={deleteBuildHandler}>Delete Build</button></li>}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateBuildCard","import { useEffect, useState } from 'react'\r\nimport getJSONDataFromServer from '../data_fetch/fetch'\r\nimport CreateBuildCard from './CreateBuildCard'\r\n\r\nfunction CustomBuildsComponent({loggedInUserName, loggedInUserPrivilege, componentTypesList, setComponentTypesList, currentBag, setCurrentBag, loggedInUserEmail}) {\r\n\r\n    const [ customBuildList, setCustomBuildList ] = useState([])\r\n    const [ buildIsUpToDate, setBuildIsUpToDate ] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getJSONDataFromServer(setCustomBuildList, \"CUSTOMBUILDS\")\r\n        if (!buildIsUpToDate) setBuildIsUpToDate(true)\r\n    }, [buildIsUpToDate])\r\n\r\n    return (\r\n        <div className=\"custom-builds-component\">\r\n            {customBuildList.map((build, index) => <CreateBuildCard \r\n                key={index} \r\n                build={build} \r\n                loggedInUserName={loggedInUserName}\r\n                loggedInUserPrivilege={loggedInUserPrivilege}\r\n                loggedInUserEmail={loggedInUserEmail}\r\n                componentTypesList={componentTypesList} \r\n                setComponentTypesList={setComponentTypesList} \r\n                currentBag={currentBag} \r\n                setCurrentBag={setCurrentBag}\r\n                setBuildIsUpToDate={setBuildIsUpToDate}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomBuildsComponent","import { useEffect, useState } from 'react'\r\nimport getJSONDataFromServer from '../data_fetch/fetch'\r\nimport CreateBuildCard from './CreateBuildCard'\r\n\r\nfunction RaccoonBuildsComponent({loggedInUserName, loggedInUserPrivilege, loggedInUserEmail, componentTypesList, setComponentTypesList, currentBag, setCurrentBag}) {\r\n\r\n    const [ raccoonBuildList, setRaccoonBuildList ] = useState([])\r\n    const [ buildIsUpToDate, setBuildIsUpToDate ] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getJSONDataFromServer(setRaccoonBuildList, \"RACCOONBUILDS\")\r\n        if (!buildIsUpToDate) setBuildIsUpToDate(true)\r\n    }, [buildIsUpToDate])\r\n\r\n    return (\r\n        <div className=\"raccoon-builds-component\">\r\n            {raccoonBuildList.map((build, index) => <CreateBuildCard\r\n                key={index}\r\n                build={build}\r\n                loggedInUserName={loggedInUserName}\r\n                loggedInUserPrivilege={loggedInUserPrivilege}\r\n                loggedInUserEmail={loggedInUserEmail}\r\n                componentTypesList={componentTypesList}\r\n                setComponentTypesList={setComponentTypesList}\r\n                currentBag={currentBag}\r\n                setCurrentBag={setCurrentBag}\r\n                setBuildIsUpToDate={setBuildIsUpToDate}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RaccoonBuildsComponent","import { useEffect, useState } from 'react'\r\nimport getJSONDataFromServer from '../data_fetch/fetch'\r\nimport CreateBuildCard from './CreateBuildCard'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nfunction UserProfileComponent({loggedInUserName, loggedInUserEmail, componentTypesList, setComponentTypesList, currentBag, setCurrentBag}) {\r\n\r\n    const [ customBuildList, setCustomBuildList ] = useState([])\r\n    const [ buildIsUpToDate, setBuildIsUpToDate ] = useState(true)\r\n    const user = localStorage.getItem('jwtToken') !== null ? jwt_decode(localStorage.getItem('jwtToken')) : null\r\n\r\n    useEffect(() => {\r\n        getJSONDataFromServer(setCustomBuildList, \"CUSTOMBUILDS\")\r\n        if (!buildIsUpToDate) setBuildIsUpToDate(true)\r\n    }, [buildIsUpToDate])\r\n\r\n    const getOnlyUserBuilds = () => {\r\n        let filteredBuildList = customBuildList.filter(build => build.USER_EMAIL === loggedInUserEmail)\r\n        return filteredBuildList\r\n    }\r\n\r\n    if (loggedInUserName !== null && user !== null) { return (\r\n        <div className=\"user-profile-component\">\r\n            <img width=\"100px\" src={user.picture} alt=\"user profile\"/>\r\n            <h1>{loggedInUserName}</h1>\r\n            <h2>{user.email}</h2>\r\n            {getOnlyUserBuilds().map((build, index) => <CreateBuildCard key={index} build={build} loggedInUserName={loggedInUserName} loggedInUserEmail={loggedInUserEmail} componentTypesList={componentTypesList} setComponentTypesList={setComponentTypesList} currentBag={currentBag} setCurrentBag={setCurrentBag} setBuildIsUpToDate={setBuildIsUpToDate}/>)}\r\n        </div>\r\n    ) \r\n} else {\r\n    return (\r\n        <div>\r\n            <p>You are not logged in!</p>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default UserProfileComponent","import { useHistory } from 'react-router-dom'\r\nimport logo from '../images/toxic_logo.png'\r\n\r\nfunction CreateBagPreview({currentBag, setCurrentBag}) {\r\n\r\n    const history = useHistory();\r\n\r\n    const bagTotalPrice = () => {\r\n        let initialValue = 0\r\n        return currentBag.reduce(\r\n            (accumulator, currentValue) => accumulator + currentValue.price\r\n            , initialValue\r\n        )\r\n    }\r\n\r\n    const removeItemHandler = (removableItem) => {\r\n        let newBag = currentBag.filter(item => item.id !== removableItem.id)\r\n        setCurrentBag(newBag)\r\n    }\r\n\r\n    const removeAllItem = () => {\r\n        setCurrentBag([])\r\n    }\r\n\r\n    const detailedBagBtnHandler = () => {\r\n        history.push(`/detailedBag`);\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    return (\r\n        <div className=\"bag-preview\">\r\n            <img width=\"100px\" src={logo} alt=\"toxic_logo\"></img>\r\n            <p>Total: {bagTotalPrice()} Ft</p>\r\n            <ul>\r\n                {currentBag.map((item, i) => \r\n                <li key={i}>\r\n                    <ul>\r\n                        <li>{item.name}</li>\r\n                        <li>{item.price} Ft</li>\r\n                        <li><img alt=\"prew_img\" width=\"100px\" src={item.selectedComponents.find(comp => comp.keyWord === \"CASE\").selected.IMG}/></li>\r\n                        <li className=\"remove-btn hover-btn\" onClick={()=>removeItemHandler(item)}>Drop this item</li>\r\n                    </ul>\r\n                </li>)}\r\n            </ul>\r\n            <button className=\"hover-btn\" onClick={detailedBagBtnHandler}>Detailed Bag</button>\r\n            <button className=\"hover-btn\" onClick={removeAllItem}>Drop bag</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateBagPreview","function CreateComponentDetailesRow({component}) {\r\n    return (\r\n        <ul>\r\n            <li>{component.name}</li>\r\n            <li>{component.selected.TYPE}</li>\r\n            <li>{component.selected.PRICE}</li>\r\n            <li><img width=\"100px\" src={component.selected.IMG} alt=\"selected_component_image\"></img></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default CreateComponentDetailesRow","import { useState } from 'react'\r\nimport CreateComponentDetailesRow from './CreateComponentDetailesRow'\r\n\r\nfunction CreateItemDetailRow({item, removeItemHandler}) {\r\n\r\n    const [ componentsInfoIsVisible, setComponentInfoIsVisible ] = useState(false)\r\n\r\n    const componentsInfoHandler = () => {\r\n        componentsInfoIsVisible ? setComponentInfoIsVisible(false) : setComponentInfoIsVisible(true)\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            <li>{item.name}</li>\r\n            <li>{item.price} Ft</li>\r\n            <li className=\"hover-btn\" onClick={componentsInfoHandler}>Components 🡃</li>\r\n            {componentsInfoIsVisible && <li>\r\n                {item.selectedComponents.map((component, index) => <CreateComponentDetailesRow key={index} component={component}/>)}\r\n            </li>}\r\n            <li className=\"hover-btn\" onClick={()=>removeItemHandler(item)}>Drop this item</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default CreateItemDetailRow","function sendEmail(shippingDetailes, billingDetailes, takeOverType, paymentOption, additionalInfo, currentBag, bagTotalPrice) {\r\n\r\n    fetch(`http://localhost:4000/SENDMAIL`,{\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          bagTotalPrice: bagTotalPrice,\r\n          currentBag: currentBag,\r\n          shippingDetailes: shippingDetailes,\r\n          billingDetailes: billingDetailes,\r\n          takeOverType: takeOverType,\r\n          paymentOption: paymentOption,\r\n          additionalInfo: additionalInfo\r\n        })})\r\n    }\r\n    \r\n    export default sendEmail","import { useState } from 'react'\r\nimport CreateItemDetailRow from './CreateItemDetaileRow'\r\nimport sendEmail from '../data_fetch/sendEmailFetch'\r\nimport logo from '../images/toxic_logo.png'\r\n\r\nfunction DeatiledBagComponent({currentBag, setCurrentBag}) {\r\n\r\n    const [ shippingDetailesIsVisible, setShippingDetailesIsVisible ] = useState(false)\r\n    const [ takeOverType, setTakeOverType ] = useState(\"\")\r\n    const [ paymentOption, setPaymentOption ] = useState(\"\")\r\n    const [ additionalInfo, setAdditionalInfo ] = useState(\"\")\r\n    const [ shippingDetailes, setShippingDetailes ] = useState({\r\n        ordererName : \"\",\r\n        ordererEmail: \"\",\r\n        ordererPhone: \"\",\r\n        ordererCountry: \"\",\r\n        ordererPostCode: \"\",\r\n        ordererCity: \"\",\r\n        ordererAddress: \"\"\r\n    })\r\n    const [ billingDetailes, setBillingDetailes ] = useState({\r\n        billingName : \"\",\r\n        billingEmail: \"\",\r\n        billingPhone: \"\",\r\n        billingCountry: \"\",\r\n        billingPostCode: \"\",\r\n        billingCity: \"\",\r\n        billingAddress: \"\"\r\n    })\r\n    const [ resultMsg, setResultMsg ] = useState(\"\")\r\n    const [ billingInfoCheckboxIsChecked, setBillingInfoCheckboxIsChecked ] = useState(false)\r\n\r\n    const bagTotalPrice = () => {\r\n        let initialValue = 0\r\n        return currentBag.reduce(\r\n            (accumulator, currentValue) => accumulator + currentValue.price\r\n            , initialValue\r\n        )\r\n    }\r\n\r\n    const removeItemHandler = (removableItem) => {\r\n        let newBag = currentBag.filter(item => item.id !== removableItem.id)\r\n        setCurrentBag(newBag)\r\n    }\r\n\r\n    const removeAllItem = () => {\r\n        setCurrentBag([])\r\n    }\r\n\r\n    const shippingDetailesVisibility = () => {\r\n        shippingDetailesIsVisible ? setShippingDetailesIsVisible(false) : setShippingDetailesIsVisible(true)\r\n    }\r\n    \r\n    const completeOrderButtonHandler = () => {\r\n        if (takeOverType !== \"\" && paymentOption !== \"\" && Object.values(shippingDetailes).filter(val => val === \"\").length === 0 && (Object.values(billingDetailes).filter(val => val === \"\").length === 0 || billingInfoCheckboxIsChecked)) {\r\n            if (billingInfoCheckboxIsChecked)  sendEmail(shippingDetailes, shippingDetailes, takeOverType, paymentOption, additionalInfo, currentBag, bagTotalPrice()) \r\n            else sendEmail(shippingDetailes, billingDetailes, takeOverType, paymentOption, additionalInfo, currentBag, bagTotalPrice()) \r\n            setResultMsg(\"Your order is successful, you got an e-mail with the ordering properties.\")\r\n            setCurrentBag([])\r\n        } else {\r\n            setResultMsg(\"Fill every cell before ordering!\")\r\n        }\r\n    }\r\n\r\n    if (currentBag.length !== 0) { return (\r\n        <div className=\"detailed-bag-component\">\r\n            <img width=\"150px\" src={logo} alt=\"toxic_logo\"></img>\r\n            <p>Total: {bagTotalPrice()} Ft</p>\r\n            {currentBag.map((item, index) => <CreateItemDetailRow key={index} item={item} removeItemHandler={removeItemHandler}/>)}\r\n            <button className=\"hover-btn drop-bag-btn\" onClick={removeAllItem}>Drop bag</button>\r\n            <button className=\"hover-btn\" onClick={shippingDetailesVisibility}>Shipping detailes</button>\r\n            {shippingDetailesIsVisible && \r\n                <div className=\"shipping-info\">\r\n                    <p>Delivery services: </p>\r\n                    <select onChange={(e)=>setTakeOverType(e.target.value)}>\r\n                        <option value=\"\">Choose</option>\r\n                        <option>Superfast + Supercool delivery bros - 1690 Ft</option>\r\n                        <option>Sloth delivery service - 1090 Ft</option>\r\n                    </select>\r\n                    <p>Payment: </p>\r\n                    <select onChange={(e)=>setPaymentOption(e.target.value)}>\r\n                        <option value=\"\">Choose</option>\r\n                        <option>In Cash</option>\r\n                        <option>With Bankcard</option>\r\n                    </select>\r\n                    <p>Shipping detailes: </p>\r\n                    <div>\r\n                    <input placeholder=\"Orderer name\" onChange={(e)=>setShippingDetailes({...shippingDetailes, ordererName : e.target.value})}/>\r\n                    <input placeholder=\"E-mail\" onChange={(e)=>setShippingDetailes({...shippingDetailes, ordererEmail : e.target.value})}/>\r\n                    <input placeholder=\"Phone\" onChange={(e)=>setShippingDetailes({...shippingDetailes, ordererPhone : e.target.value})}/>\r\n                    <input placeholder=\"Country\" onChange={(e)=>setShippingDetailes({...shippingDetailes, ordererCountry : e.target.value})}/>\r\n                    <input placeholder=\"Post number\" type=\"number\" onChange={(e)=>setShippingDetailes({...shippingDetailes, ordererPostCode : e.target.value})}/>\r\n                    <input placeholder=\"City\" onChange={(e)=>setShippingDetailes({...shippingDetailes, ordererCity : e.target.value})}/>\r\n                    <input placeholder=\"Street / House number / Door number\" onChange={(e)=>setShippingDetailes({...shippingDetailes, ordererAddress : e.target.value})}/>\r\n                    </div>\r\n                    <p>Billing detailes: </p>\r\n                    <div>\r\n                    <input type=\"checkbox\" checked={billingInfoCheckboxIsChecked} onChange={()=>setBillingInfoCheckboxIsChecked(!billingInfoCheckboxIsChecked)}/><p>Same as shipping detailes</p>\r\n                    <input value={billingInfoCheckboxIsChecked ? shippingDetailes.ordererName : billingDetailes.billingName} placeholder=\"Billing name\" onChange={(e)=>setBillingDetailes({...billingDetailes, billingName : e.target.value})}/>\r\n                    <input value={billingInfoCheckboxIsChecked ? shippingDetailes.ordererEmail : billingDetailes.billingEmail} placeholder=\"E-mail\" onChange={(e)=>setBillingDetailes({...billingDetailes, billingEmail : e.target.value})}/>\r\n                    <input value={billingInfoCheckboxIsChecked ? shippingDetailes.ordererPhone : billingDetailes.billingPhone} placeholder=\"Phone\" onChange={(e)=>setBillingDetailes({...billingDetailes, billingPhone : e.target.value})}/>\r\n                    <input value={billingInfoCheckboxIsChecked ? shippingDetailes.ordererCountry : billingDetailes.billingCountry} placeholder=\"Country\" onChange={(e)=>setBillingDetailes({...billingDetailes, billingCountry : e.target.value})}/>\r\n                    <input value={billingInfoCheckboxIsChecked ? shippingDetailes.ordererPostCode : billingDetailes.billingPostCode} placeholder=\"Post number\" type=\"number\" onChange={(e)=>setBillingDetailes({...billingDetailes, billingPostCode : e.target.value})}/>\r\n                    <input value={billingInfoCheckboxIsChecked ? shippingDetailes.ordererCity : billingDetailes.billingCity} placeholder=\"City\" onChange={(e)=>setBillingDetailes({...billingDetailes, billingCity : e.target.value})}/>\r\n                    <input value={billingInfoCheckboxIsChecked ? shippingDetailes.ordererAddress : billingDetailes.billingAddress} placeholder=\"Street / House number / Door number\" onChange={(e)=>setBillingDetailes({...billingDetailes, billingAddress : e.target.value})}/>\r\n                    </div>\r\n                    <p>Additional Information for the shop or the delivery service: </p>\r\n                    <textarea onChange={(e)=>setAdditionalInfo(e.target.value)}></textarea>\r\n                    <button onClick={completeOrderButtonHandler}>Complete order</button>\r\n                    <p>{resultMsg}</p>\r\n                </div>}\r\n        </div>\r\n    ) } else {\r\n        return (\r\n            <div>\r\n                <p>{resultMsg}</p>\r\n                <p>Your bag is empty.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeatiledBagComponent","import './sassFiles/out/navbarStyle.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTools, faHdd, faServer, faSignInAlt, faSignOutAlt, faShoppingBag } from '@fortawesome/free-solid-svg-icons'\nimport { useState, useEffect } from 'react'\nimport getUserFetch from './data_fetch/getUserFetch'\nimport jwt_decode from 'jwt-decode'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport getJSONDataFromServer from './data_fetch/fetch'\nimport { getDefaultComponentTypeList } from './defaultComponentTypeList/defaultComponentTypeList'\nimport LoginComponent from './components/LoginComponent'\nimport PcBuilder from './components/PcBuilder'\nimport CustomBuildsComponent from './components/CustomBuildsComponent'\nimport RaccoonBuildsComponent from './components/RaccoonBuildsComponent'\nimport UserProfileComponent from './components/UserProfileComponent'\nimport CreateBagPreview from './components/CreateBagPreview'\nimport DeatiledBagComponent from './components/DetailedBagComponent'\n\nfunction App() {\n\n  const [ userInfo, setUserInfo ] = useState(localStorage.getItem('jwtToken') !== null ? jwt_decode(localStorage.getItem('jwtToken')) : null)\n  const [ serverData, setServerData ] = useState({})\n  const [ componentTypesList, setComponentTypesList ] = useState([])\n  const [ loggedInUserName, setLoggedInUserName ] = useState(userInfo !== null ? userInfo.name : null)\n  const [ loggedInUserPrivilege, setLoggedInPrivilege ] = useState(userInfo !== null ? userInfo.privilege : null)\n  const [ loggedInUserEmail, setLoggedInUserEmail ] = useState(userInfo !== null ? userInfo.email : null)\n  const [ bagIsVisible, setBagIsVisible ] = useState(false)\n  const [ currentBag, setCurrentBag ] = useState(localStorage.bag === undefined ? [] : JSON.parse(localStorage.bag))\n\n  useEffect(() => {\n    getJSONDataFromServer(setServerData, \"COMPONENTS\")\n    getUserFetch(localStorage.getItem('jwtToken'), setUserInfo, setLoggedInUserName, setLoggedInPrivilege, setLoggedInUserEmail)\n  }, [] )\n\n  useEffect(() => {\n    if (serverData.CPU_AMD !== undefined) {\n        setComponentTypesList(getDefaultComponentTypeList(serverData))\n    }\n  }, [serverData] )\n\n  useEffect(() => {\n    localStorage.setItem(\"bag\", JSON.stringify(currentBag))\n  }, [currentBag])\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"jwtToken\")\n    setLoggedInUserName(null)\n    setLoggedInPrivilege(null)\n    setLoggedInUserEmail(null)\n    setUserInfo(null)\n  }\n\n  const bagVisibilityHandler = () => {\n    bagIsVisible ? setBagIsVisible(false) : setBagIsVisible(true)\n  }\n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"main-page-header-container\">\n          <ul className=\"header-line-menu\">\n            <li className=\"menu-btn\"><Link to=\"/pcbuilder\">PC Builder <FontAwesomeIcon className=\"menu-icon\" icon={faTools}/></Link></li>\n            <li className=\"menu-btn\"><Link to=\"/raccoonbuilds\">Raccoon Builds <FontAwesomeIcon className=\"menu-icon\" icon={faHdd}/></Link></li>\n            <li className=\"menu-btn\"><Link to=\"/custombuilds\">Custom Builds <FontAwesomeIcon className=\"menu-icon\" icon={faServer}/></Link></li>\n            {loggedInUserName === null && <li className=\"menu-btn\"><Link to=\"/login\">Login <FontAwesomeIcon className=\"menu-icon\" icon={faSignInAlt}/></Link></li>}\n            {loggedInUserName !== null && <li  className=\"menu-btn\" onClick={logoutHandler}>Log out <FontAwesomeIcon className=\"menu-icon\" icon={faSignOutAlt}/></li>}\n            {loggedInUserName !== null && <li className=\"menu-btn\"><Link to=\"/profile\">{loggedInUserName}</Link></li>}\n            <li className=\"menu-btn\">\n              <button className=\"menu-btn\" onClick={bagVisibilityHandler}>Bag <FontAwesomeIcon icon={faShoppingBag}/></button>\n            {bagIsVisible && \n              <div className=\"bag-container\">\n                <CreateBagPreview currentBag={currentBag} setCurrentBag={setCurrentBag}/>\n              </div>}\n            </li>\n          </ul>\n        </div>\n    \n        <Switch>\n          <Route path=\"/pcbuilder\"><PcBuilder componentTypesList={componentTypesList} setComponentTypesList={setComponentTypesList} loggedInUserName={loggedInUserName} loggedInUserPrivilege={loggedInUserPrivilege} loggedInUserEmail={loggedInUserEmail} currentBag={currentBag} setCurrentBag={setCurrentBag}/></Route>\n          <Route path=\"/raccoonbuilds\"><RaccoonBuildsComponent loggedInUserName={loggedInUserName} loggedInUserPrivilege={loggedInUserPrivilege} loggedInUserEmail={loggedInUserEmail} componentTypesList={componentTypesList} setComponentTypesList={setComponentTypesList} currentBag={currentBag} setCurrentBag={setCurrentBag}/></Route>\n          <Route path=\"/custombuilds\"><CustomBuildsComponent loggedInUserName={loggedInUserName} loggedInUserPrivilege={loggedInUserPrivilege} loggedInUserEmail={loggedInUserEmail} componentTypesList={componentTypesList} setComponentTypesList={setComponentTypesList} currentBag={currentBag} setCurrentBag={setCurrentBag}/></Route>\n          <Route path=\"/login\"><LoginComponent loggedInUserName={loggedInUserName} userInfo={userInfo} setUserInfo={setUserInfo}/></Route>\n          <Route path=\"/profile\"><UserProfileComponent loggedInUserName={loggedInUserName} loggedInUserEmail={loggedInUserEmail} componentTypesList={componentTypesList} setComponentTypesList={setComponentTypesList} currentBag={currentBag} setCurrentBag={setCurrentBag}/></Route>\n          <Route path=\"/detailedBag\"><DeatiledBagComponent currentBag={currentBag} setCurrentBag={setCurrentBag}/></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}